[{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"HistogramZoo","text":"HistogramZoo R package collection functions aim identify characterize patterns histogram data.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"the-histogram-and-genomichistogram-class","dir":"Articles","previous_headings":"","what":"The Histogram and GenomicHistogram class","title":"HistogramZoo","text":"Histogram object contains 1 piece essential data 4 pieces optional data: histogram_data numeric vector representing histogram density counts interval_start histogram_end numeric vectors representing start end coordinates bin bin_width numeric length bins. can automatically estimated interval_start interval_end region_id character id histogram GenomicHistogram object contains 2 additional pieces optional data: chr chromosome strand strand restricted one +, - *. Histogram GenomicHistogram differ one several ways: Conceptualization bins: Histogram objects represent conventional histograms data binned real number scale. Starts closed ends open exception last bin start end closed. GenomicHistogram objects designed represent discrete base 1 system histogram bin represents set indices observations collected. Restrictions bin_width: Histogram objects require length bin equal exception last bin can shorter rest. GenomicHistogram objects allow lengths bin vary long shorter equal designated bin_width leaves equal distribution bin lengths user discretion. allows users construct GenomicHistogram objects using tile binnedAverage functions GenomicRanges. Disjoint intervals: Histogram GenomicHistogram objects support use disjoint intervals feature designed GenomicHistogram objects mind support representation transcripts genes set exons might consecutive intervals genomic coordinate system.","code":"my_histogram <- Histogram(   histogram_data = c(1,2,3,1,5,6),   interval_start = c(0,1,2,3,4,5),   interval_end = c(1,2,3,4,5,6),   bin_width = 1,   region_id = \"my_histogram\" )  create_coverageplot(   my_histogram,   main.cex = 1,   xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8,   xat = generate_xlabels(my_histogram, n_labels = length(my_histogram), return_xat = T),    xaxis.lab = generate_xlabels(my_histogram, n_labels = length(my_histogram)),  )  my_genomic_histogram <- GenomicHistogram(   histogram_data = c(4,5,2,3,6,8),   interval_start = seq(6),   interval_end = seq(6),   bin_width = 1,   region_id = \"my_genomic_histogram\",   chr = \"chr1\",   strand = \"*\" )  create_coverageplot(   my_genomic_histogram,   main.cex = 1,   xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8,   xat = generate_xlabels(my_genomic_histogram, n_labels = length(my_genomic_histogram), return_xat = T),    xaxis.lab = generate_xlabels(my_genomic_histogram, n_labels = length(my_genomic_histogram)),  )"},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"data-loaders-for-histogram-objects","dir":"Articles","previous_headings":"Data loaders","what":"Data loaders for Histogram objects","title":"HistogramZoo","text":"observations_to_histogram bins set observations designated histogram_bin_width generate Histogram","code":"set.seed(314) my_data <- rnorm(10000, mean = 10, sd = 5) my_histogram <- observations_to_histogram(my_data, histogram_bin_width = 1)  create_coverageplot(   my_histogram,    main.cex = NULL,    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"data-loaders-for-genomichistogram-objects","dir":"Articles","previous_headings":"Data loaders","what":"Data loaders for GenomicHistogram objects","title":"HistogramZoo","text":"bigWig_to_histogram bins coverage single bigWig file set user-defined regions (provided GRanges object, GRangesList* object GTF file) returns list GenomicHistogram objects. genome_BED_to_histogram bins coverage set genomic BED files returns list GenomicHistogram objects. Users option providing set regions GRanges GRangesList* object. transcript_BED_to_histogram, account overlapping transcript annotations, bins coverage set BED files element can pre-assigned region using 4th column (name) BED file.","code":"library(GenomicRanges)  filename <- system.file(\"extdata\", \"bigwigs\",  \"S1.bw\", package = \"HistogramZoo\")  regions <- GenomicRanges::GRanges(   seqnames = \"chr1\",   IRanges::IRanges(     start = c(17950, 19350),     end = c(18000, 19600)),   strand = \"*\" )  bigwig_histograms <- bigWig_to_histogram(   filename = filename,   regions = regions,   histogram_bin_size = 10 ) datadir <- system.file(\"extdata\", \"dna_bedfiles\",  package = \"HistogramZoo\") genome_bed_files <- list.files(datadir, pattern = \".bed$\") genome_bed_files <- file.path(datadir, genome_bed_files)  genome_bed_histograms <- genome_BED_to_histogram(   filenames = genome_bed_files,   n_fields = 6,   histogram_bin_size = 1 ) datadir <- system.file(\"extdata\", \"rna_bedfiles\", package = \"HistogramZoo\") transcript_bed_files <- file.path(datadir, paste0(\"Sample.\", 1:20, \".bed\")) gtf <- system.file(\"extdata\", \"genes.gtf\", package = \"HistogramZoo\")  histograms <- transcript_BED_to_histogram(   filenames = transcript_bed_files,   n_fields = 12,   gtf = gtf,   gene_or_transcript = \"gene\",   histogram_bin_size = 10 )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"notes-on-common-parameters","dir":"Articles","previous_headings":"Data loaders > Data loaders for GenomicHistogram objects","what":"Notes on common parameters","title":"HistogramZoo","text":"regions [bigWig, genomic BED]: Using GRangesList object allows assignment disjoint intervals GenomicHistogram (e.g. representing set exons can joined form mature transcript) GRanges object GRangesList represents elements single Histogram. Using GRanges object creates separate GenomicHistogram element GRanges object. histogram_bin_size [bigWig, genomic transcriptomic BED]: Bins generated using GenomicRanges::tile coverage calculated using GenomicRanges::binnedAverage. strategy strives create bins equal size less equal designated histogram_bin_size (see discussion difference bin_width restriction.) allow_overlapping_segments_per_sample [transcriptomic genomic BED]: BED file assumed contain elements single experimental sample. Thus, overlapping elements BED file can eliminated setting parameter FALSE.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"segmentation-and-distribution-fitting","dir":"Articles","previous_headings":"","what":"Segmentation and Distribution Fitting","title":"HistogramZoo","text":"function segment_and_fit designed pipeline constructed following sub-functions enables segmentation, denoising fitting statistical distributions Histogram GenomicHistogram objects. parameters segment_and_fit counterparts sub-functions explored detail .","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"finding-local-optima","dir":"Articles","previous_headings":"Segmentation and Distribution Fitting","what":"Finding local optima","title":"HistogramZoo","text":"find_local_optima identifies local minima maxima vector counts (histogram data).  parameter threshold allows user tune sparsity local optima histograms potentially noisy counts, .e. thresholding difference neighbouring optima.  parameter flat_endpoints allows user better fit histograms stretches equal values (e.g. pile-ups BED files GenomicHistogram). Setting parameter TRUE allow user return endpoints flat region setting parameter FALSE return estimated midpoint flat region.","code":"# Generating a Histogram  set.seed(314) dt = rnorm(10000, mean = 20, sd = 10) xhist = observations_to_histogram(dt, histogram_bin_width = 2) data = xhist$histogram_data  # basic use optima = find_local_optima(data) optima = sort(unlist(optima))  create_coverageplot(   xhist,    add.points = T,    points.x = optima,    points.y = data[optima],    points.col = \"red\",   main = \"basic optima\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 ) # Generating a Histogram with noisy counts set.seed(314) dt = rnorm(1000, mean = 20, sd = 10) xhist = observations_to_histogram(dt, histogram_bin_width = 1) data = xhist$histogram_data  # find_local_optima with threshold 0 zero_threshold_optima = find_local_optima(data, threshold = 0) zero_threshold_optima = sort(unlist(zero_threshold_optima))  create_coverageplot(   xhist,   add.points = T,    points.x = zero_threshold_optima,   points.y = data[zero_threshold_optima],   points.col = \"red\",    type = \"h\",   main = \"threshold = 0\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 )  # find_local_optima with threshold 2 threshold_optima = find_local_optima(data, threshold = 2) threshold_optima = sort(unlist(threshold_optima))  create_coverageplot(   xhist,    add.points = T,    points.x = threshold_optima,    points.y = data[threshold_optima],    points.col = \"red\",    type = \"h\",   main = \"threshold = 2\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 ) # Generating a Histogram with consecutive equal values data = c(rep(1, 3), rep(2, 4), rep(3, 3), rep(2, 1), rep(1, 5)) xhist = Histogram(histogram_data = data)  # flat_endpoints optima_flat = find_local_optima(data, flat_endpoints = TRUE) optima_flat = sort(unlist(optima_flat))  create_coverageplot(   xhist,    add.points = T,    points.x = optima_flat,    points.y = data[optima_flat],    points.col = \"red\",   main = \"flat endpoints\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 )  # midpoints optima_midpoints = find_local_optima(data, flat_endpoints = FALSE) optima_midpoints = sort(unlist(optima_midpoints))  create_coverageplot(   xhist,    add.points = T,    points.x = optima_midpoints,    points.y = data[optima_midpoints],    points.col = \"red\",   main = \"midpoints\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"the-fine-to-coarse-segmentation-algorithm","dir":"Articles","previous_headings":"Segmentation and Distribution Fitting","what":"The Fine-to-Coarse Segmentation Algorithm","title":"HistogramZoo","text":"Fine--Coarse segmentation algorithm described Delon et al. (2005), Lisani Petro (2021) Delon et al. (2006). Briefly, given histogram set local optima, FTC algorithm iterates consecutive segments identifying peaks, segments increasing counts followed segments decreasing counts. Consecutive segments merged based prioritization derived monotone cost function, optimal set peaks acquired. Granularity optimal peak set can tuned via hyperparamter \\(\\epsilon\\).","code":"# Generating a Histogram with noisy counts set.seed(314) dt = rnorm(1000, mean = 20, sd = 10) xhist = observations_to_histogram(dt, histogram_bin_width = 1)  # Extracting the histogram data data = xhist$histogram_data  # local optima zero_threshold_optima = find_local_optima(data, threshold = 0) zero_threshold_optima = sort(unlist(zero_threshold_optima))  create_coverageplot(   xhist,   add.points = T,    points.x = zero_threshold_optima,   points.y = data[zero_threshold_optima],   points.col = \"red\",    type = \"h\",   main = \"Local Optima\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 )  # Using different epsilons on FTC ftc_eps_0.05 <- ftc(data, s = zero_threshold_optima, eps = 0.05) ftc_eps_0.09 <- ftc(data, s = zero_threshold_optima, eps = 0.09) ftc_eps_0.15 <- ftc(data, s = zero_threshold_optima, eps = 0.15) ftc_eps_0.25 <- ftc(data, s = zero_threshold_optima, eps = 0.25) ftc_eps_0.5 <- ftc(data, s = zero_threshold_optima, eps = 0.5)  create_coverageplot(   xhist,   add.points = T,    points.x = ftc_eps_0.05,   points.y = data[ftc_eps_0.05],   points.col = \"red\",    type = \"h\",   main = expression(bold(paste(\"FTC: \", epsilon, \"=0.05\"))),   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 )  create_coverageplot(   xhist,   add.points = T,    points.x = ftc_eps_0.09,   points.y = data[ftc_eps_0.09],   points.col = \"red\",    type = \"h\",   main = expression(bold(paste(\"FTC: \", epsilon, \"=0.09\"))),   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 )  create_coverageplot(   xhist,   add.points = T,    points.x = ftc_eps_0.15,   points.y = data[ftc_eps_0.15],   points.col = \"red\",    type = \"h\",   main = expression(bold(paste(\"FTC: \", epsilon, \"=0.15\"))),   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 )  create_coverageplot(   xhist,   add.points = T,    points.x = ftc_eps_0.25,   points.y = data[ftc_eps_0.25],   points.col = \"red\",    type = \"h\",   main = expression(bold(paste(\"FTC: \", epsilon, \"=0.25\"))),   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 )  create_coverageplot(   xhist,   add.points = T,    points.x = ftc_eps_0.5,   points.y = data[ftc_eps_0.5],   points.col = \"red\",    type = \"h\",   main = expression(bold(paste(\"FTC: \", epsilon, \"=0.5\"))),   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"filtering-low-entropy-regions","dir":"Articles","previous_headings":"Segmentation and Distribution Fitting","what":"Filtering Low Entropy Regions","title":"HistogramZoo","text":"presence noisy data, can helpful filter regions low entropy extract high density regions. Low entropy regions max_gaps can identified using algorithm described Delon et al. (2005). Briefly, region defined gap high entropy low density relative adjacent peak. Identification max gaps conducted segment post-segmentation.","code":"# Generating a Histogram with noisy counts set.seed(314) dt = c(   rnorm(1000, mean = 20, sd = 5),   runif(1000, min = 0, max = 40) ) xhist = observations_to_histogram(dt, histogram_bin_width = 1)  # Segment and Fit with and without filtering for max gaps filtered_fit <- segment_and_fit(   histogram_obj = xhist,   eps = 1,   seed = 314,   remove_low_entropy = TRUE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )  unfiltered_fit <- segment_and_fit(   histogram_obj = xhist,   eps = 1,   seed = 314,   remove_low_entropy = FALSE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )  unfiltered_plt <- create_coverageplot(   unfiltered_fit,   main = \"Unfiltered\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    xaxis.lab = NULL,    yaxis.cex = 0.8,   legend = NULL )  # Plotting filtered_plt <- create_coverageplot(   filtered_fit,   main = \"Remove max gaps\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    xaxis.label = NULL,    yaxis.cex = 0.8,   legend = NULL )  print(unfiltered_plt) print(filtered_plt)"},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"distributions","dir":"Articles","previous_headings":"Segmentation and Distribution Fitting > Fitting Statistical Distributions","what":"Distributions","title":"HistogramZoo","text":"Three distributions provided: normal (Gaussian) distribution, uniform distribution gamma distribution. gamma distribution can flipped account skew negative direction. Normal gamma distributions can fit full form truncated form.","code":"set.seed(314) gaussian_data <- rnorm(10000, mean = 50, sd = 5) gaussian_histogram <- observations_to_histogram(gaussian_data)  # Keeping all data and fitting a full model gaussian_full <- segment_and_fit(   histogram_obj = gaussian_histogram,   eps = 1,   seed = 314,   remove_low_entropy = FALSE,   truncated_models = FALSE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )  # Removing noisy data and fitting a truncated model gaussian_truncated <- segment_and_fit(   histogram_obj = gaussian_histogram,   eps = 1,   seed = 314,   remove_low_entropy = TRUE,   truncated_models = TRUE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )  gaussian_full_plt <- create_coverageplot(   gaussian_full,   main = \"Normal (Full)\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    xaxis.label = NULL,    yaxis.cex = 0.8,   legend = NULL )  gaussian_truncated_plt <- create_coverageplot(   gaussian_truncated,   main = \"Normal (Truncated)\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    xaxis.label = NULL,    yaxis.cex = 0.8,   legend = NULL )  print(gaussian_full_plt) print(gaussian_truncated_plt) set.seed(314) gamma_data <- rgamma(10000, shape = 2, rate = 0.4) gamma_histogram <- observations_to_histogram(gamma_data)  # Keeping all data and fitting a full model gamma_full <- segment_and_fit(   histogram_obj = gamma_histogram,   eps = 1,   seed = 314,   remove_low_entropy = FALSE,   truncated_models = FALSE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )  # Removing noisy data and fitting a truncated model gamma_truncated <- segment_and_fit(   histogram_obj = gamma_histogram,   eps = 1,   seed = 314,   remove_low_entropy = TRUE,   truncated_models = TRUE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )  gamma_full_plt <- create_coverageplot(   gamma_full,   main = \"Gamma (Full)\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    xaxis.label = NULL,    yaxis.cex = 0.8,   legend = NULL )  gamma_truncated_plt <- create_coverageplot(   gamma_truncated,   main = \"Gamma (Truncated)\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    xaxis.label = NULL,    yaxis.cex = 0.8,   legend = NULL )  print(gamma_full_plt) print(gamma_truncated_plt) set.seed(314) gamma_flip_data <- rgamma_flip(9000, shape = 4, rate = 0.4) + 80 gamma_flip_histogram <- observations_to_histogram(gamma_flip_data)  # Keeping all data and fitting a full model gamma_flip_full <- segment_and_fit(   histogram_obj = gamma_flip_histogram,   eps = 1,   seed = 314,   remove_low_entropy = FALSE,   truncated_models = FALSE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )  # Removing noisy data and fitting a truncated model gamma_flip_truncated <- segment_and_fit(   histogram_obj = gamma_flip_histogram,   eps = 1,   seed = 314,   remove_low_entropy = TRUE,   truncated_models = TRUE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )  gamma_flip_full_plt <- create_coverageplot(   gamma_flip_full,   main = \"Gamma Flipped (Full)\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    xaxis.label = NULL,    yaxis.cex = 0.8,   legend = NULL )  gamma_flip_truncated_plt <- create_coverageplot(   gamma_flip_truncated,   main = \"Gamma Flipped (Truncated)\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    xaxis.label = NULL,    yaxis.cex = 0.8,   legend = NULL )  print(gamma_flip_full_plt) print(gamma_flip_truncated_plt) set.seed(314) uniform_data <- runif(10000, min = 0, max = 10) uniform_histogram <- observations_to_histogram(uniform_data)  # Fitting a uniform segment uniform_fit <- segment_and_fit(   histogram_obj = uniform_histogram,   eps = 1,   seed = 314,   max_uniform = FALSE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )  uniform_plt <- create_coverageplot(   uniform_fit,   main = \"Uniform\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    xaxis.label = NULL,    yaxis.cex = 0.8,   legend = NULL )  print(uniform_plt)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"metrics","dir":"Articles","previous_headings":"Segmentation and Distribution Fitting > Fitting Statistical Distributions","what":"Metrics","title":"HistogramZoo","text":"Five metrics provided optimize best fitting statistical distribution. Jaccard index ratio intersection fitted observed distributions union two distributions. Intersection intersection fitted observed distributions. Kolmogorov-Smirnov statistic maximum divergence fitted observed distributions. Mean squared error mean squared difference fitted observed distributions. \\(\\chi\\)-squared statistic \\(\\chi\\)-squared distance two distributions .e. \\(\\sum{\\frac{(x-y)^2}{(x+y)}}\\)","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"finding-a-consensus-model","dir":"Articles","previous_headings":"Segmentation and Distribution Fitting > Fitting Statistical Distributions","what":"Finding a Consensus Model","title":"HistogramZoo","text":"function find_consensus_model used determine best fitting model segment provides two methods : weighted_majority_vote (weighted majority voting) rra (robust rank aggregation, Kolde et al. (2012)). Weighted majority voting requires users provide ranking metrics descending order importance associated weights used weighted sum ranks determine best fitting distribution. event tie, highest ranked metric used break tie.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"maximizing-uniform-segments","dir":"Articles","previous_headings":"Segmentation and Distribution Fitting > Fitting Statistical Distributions","what":"Maximizing Uniform Segments","title":"HistogramZoo","text":"function identify_uniform_segment optimizes identification uniform segments iteratively trimming ends region refitting uniform distribution shortened region. controlled threshold parameter proportion original region must preserved stepsize indicates stepsize taken search. One metrics must selected determine best fit parameter max_sd_size indicates maximum tolerable standard deviation goodness--fit best fitting uniform distribution function can select longest uniform distribution.","code":"set.seed(314)  # Simulating uniform data that can benefit from trimming uniform_data <- c(   runif(10000, min = 0, max = 50),   runif(10000, min = 2, max = 48),   runif(10000, min = 4, max = 46),   runif(10000, min = 6, max = 44),   runif(10000, min = 8, max = 42) ) uniform_histogram <- observations_to_histogram(uniform_data)  # Fitting a uniform segment uniform_untrimmed <- segment_and_fit(   histogram_obj = uniform_histogram,   eps = 1,   seed = 314,   max_uniform = FALSE,   remove_low_entropy = FALSE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )  uniform_trimmed <- segment_and_fit(   histogram_obj = uniform_histogram,   eps = 1,   seed = 314,   max_uniform = TRUE,   uniform_threshold = 0.75,   uniform_stepsize = 5,   uniform_max_sd = 1,   remove_low_entropy = FALSE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )  uniform_untrimmed_plt <- create_coverageplot(   uniform_untrimmed,   main = \"Uniform (Untrimmed)\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    xaxis.label = NULL,    yaxis.cex = 0.8,   legend = NULL )  uniform_trimmed_plt <- create_coverageplot(   uniform_trimmed,   main = \"Uniform (Max Uniform)\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    xaxis.label = NULL,    yaxis.cex = 0.8,   legend = NULL )  print(uniform_untrimmed_plt) print(uniform_trimmed_plt)"},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"summary-statistics","dir":"Articles","previous_headings":"Exporting Results","what":"Summary statistics","title":"HistogramZoo","text":"summarize_results can applied HistogramFit object extract indices summary statistics analysis. data frame returned following columns. region_id character string denoting region_id Histogram segment_id integer id identifying ordinal segment Histogram segmentation chr optional column denoting chromosome GenomicHistogram object start interval start segment end interval end segment strand optional column denoting strand GenomicHistogram object interval_count number intervals segment - used collapsing disjoint intervals interval_sizes width interval interval_starts start index interval histogram_start start index segment Histogram representation histogram_end end index segment Histogram representation value fitted value metric function metric metric used fit distribution dist distribution name dist_param[0-9] values distribution parameters dist_param_name[0-9] matching names distribution parameters","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"plotting","dir":"Articles","previous_headings":"Exporting Results","what":"Plotting","title":"HistogramZoo","text":"Several plotting functions available aid visualization results. Plotting functions can combined plotting capabilities BoutrosLab.plotting.general (P’ng et al. 2019) based lattice R package (Sarkar, Sarkar, KernSmooth 2015). create_coverageplot can used visualize Histogram, GenomicHistogram HistogramFit object annotated segmentation points distributions. create_residualplot can used visualize residuals fitted observed distributions HistogramFit object create_trackplot can used add complementary tracks histogram visualization combined create_layerplot create_layerplot can used create multi-panel plot combinations coverage, residual track plots.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/articles/HistogramZoo.html","id":"example","dir":"Articles","previous_headings":"Exporting Results","what":"Example","title":"HistogramZoo","text":"histogram simulated 3 statistical distributions.  HistogramZoo applied segment histogram fit distributions. Results reported table. summarize_results table returns data frame columns describing region_id original histogram separate identified segment (segment_id). start end columns indicate segment indices relative interval_start interval_end indices original histogram. interval_count, interval_sizes interval_starts columns aid describing histograms disjoint intervals following BED file format. histogram_start histogram_end columns indicate start end indices relative histogram (.e. assuming bin ordinal). value refers GOF selected metric dist column indicates distribution fitted. dist_param columns hold values distribution parameters dist_param_name columns hold names parameters corresponding distribution plot result generated. Summary Figure","code":"set.seed(314) my_data <- c(   rnorm(8000, mean = 50, sd = 2),   rgamma(10000, shape = 2, rate = 0.4),   rgamma_flip(9000, shape = 2, rate = 0.4) + 80 )  my_histogram <- observations_to_histogram(my_data)  # A basic coverageplot to visualize the data create_coverageplot(   my_histogram,   main = \"Histogram\",   main.cex = 1,    xaxis.tck = 0.5,    yaxis.tck = 0.5,    xlab.cex = 1,    ylab.cex = 1,    xaxis.cex = 0.8,    yaxis.cex = 0.8 ) # Conducting analysis histogram_fit <- segment_and_fit(   histogram_obj = my_histogram,   eps = 1,   seed = 314,   truncated_models = TRUE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )  # summarize_results to generate res <- summarize_results(   histogram_fit ) knitr::kable(res[,c(\"region_id\", \"segment_id\", \"start\", \"end\", \"interval_count\", \"interval_sizes\", \"interval_starts\")]) knitr::kable(res[,c(\"histogram_start\", \"histogram_end\", \"value\", \"metric\", \"dist\")]) knitr::kable(res[,c(\"dist_param1\", \"dist_param2\", \"dist_param3\", \"dist_param4\")]) knitr::kable(res[,c(\"dist_param1_name\", \"dist_param2_name\", \"dist_param3_name\", \"dist_param4_name\")]) # Histogram Fit coverage_plt <- create_coverageplot(   histogram_fit,   main = \"HistogramFit\",   main.cex = 1,    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    xaxis.label = NULL,    yaxis.cex = 0.8,   legend = NULL )  residual_plt <- create_residualplot(   histogram_fit,   main = '',    xaxis.tck = 0,    yaxis.tck = 0.5,    xlab.label = '',    ylab.cex = 1,    ylab.label = \"Residuals\",   xaxis.label = NULL,    yaxis.cex = 0.8 )  track_plt <- create_trackplot(   res,   row_id = \"region_id\",   metric_id = \"value\",   start_id = \"histogram_start\",   end_id = \"histogram_end\",   xat = generate_xlabels(histogram_fit, return_xat = T),   xaxis.lab = generate_xlabels(histogram_fit),   main = '',    xaxis.tck = 0,    yaxis.tck = 0,    xlab.cex = 1,    ylab.cex = 1,   ylab.label = \"GOF\",   xaxis.cex = 0.8,    yaxis.lab = NULL )  covariate.legend <- list(   legend = list(     colours = c(       \"orange\",       \"chartreuse4\",       \"chartreuse3\"     ),     labels = c(       \"Normal\",       \"Gamma\",       \"Gamma Flipped\"     ),     title = expression(bold(underline('Fitted Distributions'))),     lwd = 0.5   ),   legend = list(     colours = c(\"red\"),     labels = c(\"FTC Segmentation\"),     title = expression(bold(underline('Points'))),     lwd = 0.5   ),   legend = list(     colours = c('blue', 'red'),     labels = c(       formatC(min(res[,\"value\"]), digits = 2),       formatC(max(res[,\"value\"]), digits = 2)     ),     title = expression(bold(underline('Fit'))),     continuous = TRUE,     width = 3,     tck = 1,     tck.number = 3,     at = c(0,100),     angle = -90,     just = c(\"center\",\"bottom\")   ) )  side.legend <- legend.grob(   legends = covariate.legend,   label.cex = 0.8,   title.cex = 0.8,   title.just = 'left',   title.fontface = 'bold',   size = 2 )  summary_figure <- create_layerplot(   plot.objects = list(coverage_plt, residual_plt, track_plt),   plot.objects.heights = c(4,1.5,1.5),   y.spacing = -3.5,   ylab.axis.padding = -13,   legend = list(     right = list(       x = 0.8,       y = 1,       fun = side.legend     )   ),   right.legend.padding = 0.5,   right.padding = 1 )  # For exporting the plot # filename = \"SummaryFigure.pdf\" # pdf(filename, width = 7, height = 7) # print(summary_figure) # dev.off()"},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Helen Zhu. Author, maintainer. Stefan Eng. Author.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhu H, Eng S (2023). HistogramZoo: Method Peak Merging Distribution Fitting Across Biological Replicates. R package version 1.3.1, https://friendly-invention-3cb82740.pages.github.io/.","code":"@Manual{,   title = {HistogramZoo: A Method for Peak Merging And Distribution Fitting Across Biological Replicates},   author = {Helen Zhu and Stefan Eng},   year = {2023},   note = {R package version 1.3.1},   url = {https://friendly-invention-3cb82740.pages.github.io/}, }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/index.html","id":"histogramzoo","dir":"","previous_headings":"","what":"A Method for Peak Merging And Distribution Fitting Across Biological Replicates","title":"A Method for Peak Merging And Distribution Fitting Across Biological Replicates","text":"Description Installation Quick start Resources Getting help Citation information License","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"A Method for Peak Merging And Distribution Fitting Across Biological Replicates","text":"HistogramZoo generalized framework histogram segmentation statistical characterization written R. Histograms represented S3 Histogram GenomicHistogram objects. characterization genomic data linear coordinate system, human reference genome, HistogramZoo provides several convenient data loaders compute coverage BED files load bigWig files, support genomic transcriptomic coordinate systems. characteristic function provided HistogramZoo segment_and_fit wrapper sequence operations aim segment complicated histograms identify regions enriched density fit known statistical distributions regions. Using Fine--Coarse segmentation algorithm described Delon et al., 2006, segmentation occurs iteratively set local optima. user provided option filtering low entropy regions, fitting truncated distributions, fine-tuning endpoints uniformly-distributed regions using several goodness--fit metrics improve reported results. Finally, HistogramZoo provides several convenient functions summarize fits visualize data. overview plot","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Method for Peak Merging And Distribution Fitting Across Biological Replicates","text":"Using devtools R: source: shell script git clone https://github.com/uclahs-cds/public-R-HistogramZoo.git R CMD INSTALL public-R-HistogramZoo CRAN (coming soon!)","code":"library(devtools) install_github('https://github.com/uclahs-cds/public-R-HistogramZoo')"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"A Method for Peak Merging And Distribution Fitting Across Biological Replicates","text":"basic example applying HistogramZoo histogram Gaussian data provided : Results table Coverage plot","code":"library(HistogramZoo);  set.seed(271828);  # Generating Data gaussian_data <- rnorm(10000, mean = 50, sd = 15); histogram_data <- observations_to_histogram(gaussian_data, histogram_bin_width=5);  # Segmentation and fitting distributions results <- segment_and_fit(histogram_data, eps = 1);  # Summarizing results results_table <- summarize_results(results);  # Plotting create_coverageplot(results);"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"A Method for Peak Merging And Distribution Fitting Across Biological Replicates","text":"function reference detailed vignette available . CRAN page currently progress.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"A Method for Peak Merging And Distribution Fitting Across Biological Replicates","text":"Looking guidance support HistogramZoo? Look . Check Discussions page! Submit bugs 🐛, suggest new features 🌸 see current work 🦾 Issues page.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/index.html","id":"citation-information","dir":"","previous_headings":"","what":"Citation information","title":"A Method for Peak Merging And Distribution Fitting Across Biological Replicates","text":"stumbled upon unpublished software 🤫 🤫 🤫. currently preparing manuscript HistogramZoo. Please befriend us learn check back later updated citation information.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"A Method for Peak Merging And Distribution Fitting Across Biological Replicates","text":"Authors: Helen Zhu, Stefan Eng, Paul C. Boutros (PBoutros@mednet.ucla.edu) HistogramZoo licensed GNU General Public License version 3.0. See file LICENSE.md terms GNU GPL license. HistogramZoo generalized framework histogram segmentation statistical characterization written R. Copyright (C) University California Los Angeles (“Boutros Lab”) rights reserved. program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE. See GNU General Public License details.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/GTF_to_GRangesList.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces a GRangesList out of a GTF file, each element represents the exons of a gene or transcript — GTF_to_GRangesList","title":"Produces a GRangesList out of a GTF file, each element represents the exons of a gene or transcript — GTF_to_GRangesList","text":"Produces GRangesList GTF file, element represents exons gene transcript","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/GTF_to_GRangesList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces a GRangesList out of a GTF file, each element represents the exons of a gene or transcript — GTF_to_GRangesList","text":"","code":"GTF_to_GRangesList(   gtf,   gene_or_transcript = c(\"gene\", \"transcript\"),   select_strand = c(\"*\", \"+\", \"-\"),   select_chrs = NULL,   select_ids = NULL )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/GTF_to_GRangesList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces a GRangesList out of a GTF file, each element represents the exons of a gene or transcript — GTF_to_GRangesList","text":"gtf path GTF file gene_or_transcript Whether histograms computed gene annotations transcript annotations. Default gene select_strand Select elements belonging specific strand. Default * select_chrs Select elements specific chromosomes. Default NULL select_ids Select elements matching ids genes transcripts (depending gene_or_transcript). Default NULL","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/GTF_to_GRangesList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces a GRangesList out of a GTF file, each element represents the exons of a gene or transcript — GTF_to_GRangesList","text":"GRangesList object element GRanges object containing exons gene transcript","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/GTF_to_GRangesList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produces a GRangesList out of a GTF file, each element represents the exons of a gene or transcript — GTF_to_GRangesList","text":"","code":"if (FALSE) { gtf = system.file(\"extdata\", \"genes.gtf\", package = \"HistogramZoo\") gtf_gr = GTF_to_GRangesList(gtf) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/GenomicHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates an S3 `GenomicHistogram` object — GenomicHistogram","title":"Generates an S3 `GenomicHistogram` object — GenomicHistogram","text":"Generates S3 `GenomicHistogram` object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/GenomicHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates an S3 `GenomicHistogram` object — GenomicHistogram","text":"","code":"GenomicHistogram(   histogram_data = double(),   interval_start = integer(),   interval_end = integer(),   region_id = character(),   bin_width = integer(),   chr = character(),   strand = c(\"*\", \"+\", \"-\"),   intron_start = integer(),   intron_end = integer() )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/GenomicHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates an S3 `GenomicHistogram` object — GenomicHistogram","text":"histogram_data vector counts/density interval_start integer vector representing starts intervals interval_end integer vector representing ends intervals region_id character identifier region interest bin_width integer width histogram bins, missing, estimated `interval_start` `interval_end` chr chromosome name strand strand intron_start integer vector representing starts introns (optional: represent intron-spanning histograms transcripts) intron_end integer vector representing ends introns (optional: represent intron-spanning histograms transcripts)","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/GenomicHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates an S3 `GenomicHistogram` object — GenomicHistogram","text":"GenomicHistogram object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/GenomicHistogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates an S3 `GenomicHistogram` object — GenomicHistogram","text":"","code":"x = GenomicHistogram( histogram_data = runif(10), interval_start = 1:10, interval_end = 1:10, chr = \"chr1\", strand = \"+\")"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/Histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates an S3 `Histogram` object — Histogram","title":"Generates an S3 `Histogram` object — Histogram","text":"Generates S3 `Histogram` object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/Histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates an S3 `Histogram` object — Histogram","text":"","code":"Histogram(   histogram_data = double(),   interval_start = numeric(),   interval_end = numeric(),   bin_width = numeric(),   region_id = character() )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/Histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates an S3 `Histogram` object — Histogram","text":"histogram_data vector counts/density interval_start numeric vector representing starts intervals interval_end numeric vector representing ends intervals bin_width numeric width histogram bins, missing, estimated `interval_start` `interval_end` region_id character identifier region interest","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/Histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates an S3 `Histogram` object — Histogram","text":"Histogram object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/Histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates an S3 `Histogram` object — Histogram","text":"","code":"x = Histogram(histogram_data = runif(10), interval_start = 1:10, interval_end = 2:11)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/are_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify if a vector contains R colours — are_colours","title":"Verify if a vector contains R colours — are_colours","text":"Verify vector contains R colours","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/are_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify if a vector contains R colours — are_colours","text":"","code":"are_colours(x)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/are_colours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify if a vector contains R colours — are_colours","text":"x vector potential colurs","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/are_colours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify if a vector contains R colours — are_colours","text":"logical vector indicating elements colours","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/base0_to_base1.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a GRanges object from base 0 to base 1 — base0_to_base1","title":"Converts a GRanges object from base 0 to base 1 — base0_to_base1","text":"Converts GRanges object base 0 base 1","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/base0_to_base1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a GRanges object from base 0 to base 1 — base0_to_base1","text":"","code":"base0_to_base1(gr)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/base0_to_base1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a GRanges object from base 0 to base 1 — base0_to_base1","text":"gr GRanges object base 0","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/base0_to_base1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a GRanges object from base 0 to base 1 — base0_to_base1","text":"GRanges object base 1","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/bigWig_to_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates GenomicHistogram objects from the coverage of a bigWig file — bigWig_to_histogram","title":"Generates GenomicHistogram objects from the coverage of a bigWig file — bigWig_to_histogram","text":"Generates GenomicHistogram objects coverage bigWig file","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/bigWig_to_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates GenomicHistogram objects from the coverage of a bigWig file — bigWig_to_histogram","text":"","code":"bigWig_to_histogram(   filename,   strand = c(\"*\", \"+\", \"-\"),   score_threshold = 0,   regions = NULL,   gtf = NULL,   histogram_bin_size = 50,   gene_or_transcript = c(\"gene\", \"transcript\"),   select_chrs = NULL,   select_ids = NULL )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/bigWig_to_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates GenomicHistogram objects from the coverage of a bigWig file — bigWig_to_histogram","text":"filename Name bigwig file import strand strand bigwig file data originates. Default \"*\". strand \"+\" \"-\", strand also used select regions matching strand. score_threshold hard threshold score bigwig file. Scores higher threshold used computation histogram. regions GRanges GRangesList object representing regions interest defining histograms, GRangesList object allows specification non-continuous segments, default NULL - regions taken set elements nonzero coverage gtf GTF file select regions interest. Default NULL histogram_bin_size bin size (base-pairs) bin signal histogram. Default 50 gene_or_transcript Whether histograms computed gene annotations transcript annotations. Default gene select_chrs Select elements specific chromosomes. Default NULL select_ids Select elements matching ids genes transcripts (depending gene_or_transcript). Default NULL","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/bigWig_to_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates GenomicHistogram objects from the coverage of a bigWig file — bigWig_to_histogram","text":"list GenomicHistogram objects","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/bigWig_to_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates GenomicHistogram objects from the coverage of a bigWig file — bigWig_to_histogram","text":"","code":"if (FALSE) { filename <- system.file(\"extdata\", \"bigwigs\",  \"S1.bw\", package = \"HistogramZoo\") regions <- GenomicRanges::GRanges( seqnames = \"chr1\", IRanges::IRanges(start = c(17950, 19350),                  end = c(18000, 19600)), strand = \"*\")  histograms <- bigWig_to_histogram( filename = filename, regions = regions, histogram_bin_size = 10) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/bin_log_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the negative log likelihood of an underlying continuous distribution from binned data. — bin_log_likelihood","title":"Computes the negative log likelihood of an underlying continuous distribution from binned data. — bin_log_likelihood","text":": https://stats.stackexchange.com//68238/97417","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/bin_log_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the negative log likelihood of an underlying continuous distribution from binned data. — bin_log_likelihood","text":"","code":"bin_log_likelihood(theta, cdf, counts, bin_lower, bin_upper, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/bin_log_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the negative log likelihood of an underlying continuous distribution from binned data. — bin_log_likelihood","text":"theta parameters distribution cdf cdf function (pnorm, pgamma, punif) counts histogram bins bin_lower lower bounds histogram bins (, b] bin_upper upper bounds histogram bins (, b] ... Additional parameters pass `cdf`","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/bin_log_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the negative log likelihood of an underlying continuous distribution from binned data. — bin_log_likelihood","text":"_negative_ log-likelihood _minimized_","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/bin_log_likelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the negative log likelihood of an underlying continuous distribution from binned data. — bin_log_likelihood","text":"","code":"set.seed(100); x <- rnorm(1000, sd = 5) bin.x <- observations_to_histogram(x)  bin_log_likelihood(   theta = c(0, 4),   cdf = pnorm,   counts = bin.x$histogram_data,   bin_lower = bin.x$interval_start,   bin_upper = bin.x$interval_end   ) #> [1] 3137.2  dist_optim <- DEoptim::DEoptim(   fn = bin_log_likelihood,   cdf = pnorm,   counts = bin.x$histogram_data,   bin_lower = bin.x$interval_start,   bin_upper = bin.x$interval_end,   lower = c(min(bin.x$interval_start), 0.01),   upper = c(max(bin.x$interval_end), 10),   control = list(     trace = TRUE,     itermax = 500     )   ) #> Iteration: 1 bestvalit: 3208.328341 bestmemit:    1.988666    4.219012 #> Iteration: 2 bestvalit: 3099.537387 bestmemit:   -1.146863    5.920095 #> Iteration: 3 bestvalit: 3061.764912 bestmemit:    0.304252    5.212401 #> Iteration: 4 bestvalit: 3061.764912 bestmemit:    0.304252    5.212401 #> Iteration: 5 bestvalit: 3061.764912 bestmemit:    0.304252    5.212401 #> Iteration: 6 bestvalit: 3061.764912 bestmemit:    0.304252    5.212401 #> Iteration: 7 bestvalit: 3061.764912 bestmemit:    0.304252    5.212401 #> Iteration: 8 bestvalit: 3061.764912 bestmemit:    0.304252    5.212401 #> Iteration: 9 bestvalit: 3061.764912 bestmemit:    0.304252    5.212401 #> Iteration: 10 bestvalit: 3061.764912 bestmemit:    0.304252    5.212401 #> Iteration: 11 bestvalit: 3061.764912 bestmemit:    0.304252    5.212401 #> Iteration: 12 bestvalit: 3060.859261 bestmemit:    0.012353    5.126053 #> Iteration: 13 bestvalit: 3060.859261 bestmemit:    0.012353    5.126053 #> Iteration: 14 bestvalit: 3060.859261 bestmemit:    0.012353    5.126053 #> Iteration: 15 bestvalit: 3060.859261 bestmemit:    0.012353    5.126053 #> Iteration: 16 bestvalit: 3060.763266 bestmemit:    0.073047    5.129667 #> Iteration: 17 bestvalit: 3060.740792 bestmemit:    0.092224    5.165696 #> Iteration: 18 bestvalit: 3060.740792 bestmemit:    0.092224    5.165696 #> Iteration: 19 bestvalit: 3060.740792 bestmemit:    0.092224    5.165696 #> Iteration: 20 bestvalit: 3060.740792 bestmemit:    0.092224    5.165696 #> Iteration: 21 bestvalit: 3060.738592 bestmemit:    0.068612    5.160117 #> Iteration: 22 bestvalit: 3060.736278 bestmemit:    0.079054    5.161575 #> Iteration: 23 bestvalit: 3060.736278 bestmemit:    0.079054    5.161575 #> Iteration: 24 bestvalit: 3060.735628 bestmemit:    0.079054    5.153252 #> Iteration: 25 bestvalit: 3060.735628 bestmemit:    0.079054    5.153252 #> Iteration: 26 bestvalit: 3060.735628 bestmemit:    0.079054    5.153252 #> Iteration: 27 bestvalit: 3060.735371 bestmemit:    0.078055    5.156989 #> Iteration: 28 bestvalit: 3060.735371 bestmemit:    0.078055    5.156989 #> Iteration: 29 bestvalit: 3060.735212 bestmemit:    0.080970    5.157053 #> Iteration: 30 bestvalit: 3060.735212 bestmemit:    0.080970    5.157053 #> Iteration: 31 bestvalit: 3060.735195 bestmemit:    0.080970    5.156498 #> Iteration: 32 bestvalit: 3060.735195 bestmemit:    0.080970    5.156498 #> Iteration: 33 bestvalit: 3060.735195 bestmemit:    0.080970    5.156498 #> Iteration: 34 bestvalit: 3060.735195 bestmemit:    0.080970    5.156498 #> Iteration: 35 bestvalit: 3060.735195 bestmemit:    0.080970    5.156498 #> Iteration: 36 bestvalit: 3060.735195 bestmemit:    0.080970    5.156498 #> Iteration: 37 bestvalit: 3060.735195 bestmemit:    0.080819    5.156355 #> Iteration: 38 bestvalit: 3060.735195 bestmemit:    0.080819    5.156355 #> Iteration: 39 bestvalit: 3060.735195 bestmemit:    0.080819    5.156355 #> Iteration: 40 bestvalit: 3060.735195 bestmemit:    0.080819    5.156355 #> Iteration: 41 bestvalit: 3060.735195 bestmemit:    0.080819    5.156355 #> Iteration: 42 bestvalit: 3060.735195 bestmemit:    0.080971    5.156429 #> Iteration: 43 bestvalit: 3060.735194 bestmemit:    0.081012    5.156308 #> Iteration: 44 bestvalit: 3060.735194 bestmemit:    0.080950    5.156388 #> Iteration: 45 bestvalit: 3060.735194 bestmemit:    0.080997    5.156371 #> Iteration: 46 bestvalit: 3060.735194 bestmemit:    0.080997    5.156371 #> Iteration: 47 bestvalit: 3060.735194 bestmemit:    0.080997    5.156371 #> Iteration: 48 bestvalit: 3060.735194 bestmemit:    0.080997    5.156371 #> Iteration: 49 bestvalit: 3060.735194 bestmemit:    0.080997    5.156371 #> Iteration: 50 bestvalit: 3060.735194 bestmemit:    0.080994    5.156369 #> Iteration: 51 bestvalit: 3060.735194 bestmemit:    0.081004    5.156363 #> Iteration: 52 bestvalit: 3060.735194 bestmemit:    0.080997    5.156365 #> Iteration: 53 bestvalit: 3060.735194 bestmemit:    0.080997    5.156365 #> Iteration: 54 bestvalit: 3060.735194 bestmemit:    0.080997    5.156365 #> Iteration: 55 bestvalit: 3060.735194 bestmemit:    0.080997    5.156365 #> Iteration: 56 bestvalit: 3060.735194 bestmemit:    0.080997    5.156365 #> Iteration: 57 bestvalit: 3060.735194 bestmemit:    0.080997    5.156365 #> Iteration: 58 bestvalit: 3060.735194 bestmemit:    0.080997    5.156365 #> Iteration: 59 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 60 bestvalit: 3060.735194 bestmemit:    0.080999    5.156366 #> Iteration: 61 bestvalit: 3060.735194 bestmemit:    0.080999    5.156366 #> Iteration: 62 bestvalit: 3060.735194 bestmemit:    0.080999    5.156366 #> Iteration: 63 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 64 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 65 bestvalit: 3060.735194 bestmemit:    0.080999    5.156366 #> Iteration: 66 bestvalit: 3060.735194 bestmemit:    0.080999    5.156366 #> Iteration: 67 bestvalit: 3060.735194 bestmemit:    0.080999    5.156366 #> Iteration: 68 bestvalit: 3060.735194 bestmemit:    0.080999    5.156366 #> Iteration: 69 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 70 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 71 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 72 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 73 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 74 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 75 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 76 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 77 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 78 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 79 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 80 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 81 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 82 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 83 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 84 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 85 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 86 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 87 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 88 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 89 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 90 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 91 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 92 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 93 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 94 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 95 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 96 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 97 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 98 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 99 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 100 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 101 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 102 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 103 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 104 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 105 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 106 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 107 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 108 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 109 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 110 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 111 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 112 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 113 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 114 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 115 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 116 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 117 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 118 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 119 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 120 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 121 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 122 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 123 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 124 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 125 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 126 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 127 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 128 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 129 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 130 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 131 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 132 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 133 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 134 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 135 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 136 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 137 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 138 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 139 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 140 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 141 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 142 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 143 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 144 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 145 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 146 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 147 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 148 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 149 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 150 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 151 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 152 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 153 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 154 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 155 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 156 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 157 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 158 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 159 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 160 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 161 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 162 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 163 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 164 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 165 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 166 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 167 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 168 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 169 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 170 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 171 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 172 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 173 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 174 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 175 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 176 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 177 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 178 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 179 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 180 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 181 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 182 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 183 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 184 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 185 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 186 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 187 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 188 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 189 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 190 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 191 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 192 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 193 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 194 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 195 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 196 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 197 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 198 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 199 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 200 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 201 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 202 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 203 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 204 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 205 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 206 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 207 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 208 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 209 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 210 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 211 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 212 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 213 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 214 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 215 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 216 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 217 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 218 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 219 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 220 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 221 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 222 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 223 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 224 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 225 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 226 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 227 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 228 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 229 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 230 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 231 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 232 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 233 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 234 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 235 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 236 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 237 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 238 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 239 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 240 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 241 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 242 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 243 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 244 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 245 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 246 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 247 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 248 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 249 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 250 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 251 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 252 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 253 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 254 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 255 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 256 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 257 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 258 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 259 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 260 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 261 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 262 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 263 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 264 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 265 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 266 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 267 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 268 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 269 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 270 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 271 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 272 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 273 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 274 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 275 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 276 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 277 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 278 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 279 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 280 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 281 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 282 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 283 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 284 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 285 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 286 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 287 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 288 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 289 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 290 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 291 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 292 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 293 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 294 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 295 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 296 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 297 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 298 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 299 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 300 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 301 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 302 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 303 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 304 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 305 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 306 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 307 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 308 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 309 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 310 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 311 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 312 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 313 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 314 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 315 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 316 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 317 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 318 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 319 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 320 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 321 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 322 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 323 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 324 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 325 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 326 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 327 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 328 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 329 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 330 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 331 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 332 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 333 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 334 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 335 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 336 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 337 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 338 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 339 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 340 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 341 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 342 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 343 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 344 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 345 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 346 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 347 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 348 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 349 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 350 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 351 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 352 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 353 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 354 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 355 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 356 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 357 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 358 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 359 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 360 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 361 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 362 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 363 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 364 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 365 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 366 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 367 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 368 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 369 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 370 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 371 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 372 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 373 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 374 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 375 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 376 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 377 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 378 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 379 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 380 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 381 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 382 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 383 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 384 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 385 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 386 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 387 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 388 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 389 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 390 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 391 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 392 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 393 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 394 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 395 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 396 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 397 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 398 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 399 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 400 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 401 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 402 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 403 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 404 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 405 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 406 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 407 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 408 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 409 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 410 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 411 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 412 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 413 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 414 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 415 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 416 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 417 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 418 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 419 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 420 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 421 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 422 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 423 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 424 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 425 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 426 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 427 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 428 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 429 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 430 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 431 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 432 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 433 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 434 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 435 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 436 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 437 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 438 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 439 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 440 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 441 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 442 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 443 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 444 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 445 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 446 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 447 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 448 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 449 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 450 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 451 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 452 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 453 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 454 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 455 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 456 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 457 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 458 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 459 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 460 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 461 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 462 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 463 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 464 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 465 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 466 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 467 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 468 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 469 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 470 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 471 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 472 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 473 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 474 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 475 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 476 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 477 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 478 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 479 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 480 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 481 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 482 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 483 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 484 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 485 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 486 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 487 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 488 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 489 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 490 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 491 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 492 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 493 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 494 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 495 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 496 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 497 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 498 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 499 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 #> Iteration: 500 bestvalit: 3060.735194 bestmemit:    0.081000    5.156366 print(dist_optim$optim$bestmem) #>       par1       par2  #> 0.08099958 5.15636586"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/calculate_probability_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate whether h[a,b] > p[a,b] — calculate_probability_difference","title":"Calculate whether h[a,b] > p[a,b] — calculate_probability_difference","text":"Calculate whether h[,b] > p[,b]","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/calculate_probability_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate whether h[a,b] > p[a,b] — calculate_probability_difference","text":"","code":"calculate_probability_difference(h, p, a, b)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/calculate_probability_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate whether h[a,b] > p[a,b] — calculate_probability_difference","text":"h density distribution p density reference distribution start index subset density b end index subset density","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/calculate_probability_difference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate whether h[a,b] > p[a,b] — calculate_probability_difference","text":"logical, h[,b] > p[,b]","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/compute_coverage_on_bins.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for coverage_to_histogram that returns a dataframe from a set of ranges — compute_coverage_on_bins","title":"A helper function for coverage_to_histogram that returns a dataframe from a set of ranges — compute_coverage_on_bins","text":"helper function coverage_to_histogram returns dataframe set ranges","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/compute_coverage_on_bins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for coverage_to_histogram that returns a dataframe from a set of ranges — compute_coverage_on_bins","text":"","code":"compute_coverage_on_bins(coverage, bins)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/compute_coverage_on_bins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for coverage_to_histogram that returns a dataframe from a set of ranges — compute_coverage_on_bins","text":"coverage RLE object representing genome coverage bins GRanges object representing set bins return GRanges object \"cvg\" column representing computed coverage","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/correct_fitted_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Correcting for Jaccard/Intersection — correct_fitted_value","title":"Correcting for Jaccard/Intersection — correct_fitted_value","text":"Correcting Jaccard/Intersection","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/correct_fitted_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correcting for Jaccard/Intersection — correct_fitted_value","text":"","code":"correct_fitted_value(met, value)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/correct_fitted_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correcting for Jaccard/Intersection — correct_fitted_value","text":"met metric value metric fitted value","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/correct_fitted_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correcting for Jaccard/Intersection — correct_fitted_value","text":"metric `jaccard` `intersection`, return 1 - value","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/coverage_to_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a GenomicHistogram object from coverage data — coverage_to_histogram","title":"Generates a GenomicHistogram object from coverage data — coverage_to_histogram","text":"Generates GenomicHistogram object coverage data","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/coverage_to_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a GenomicHistogram object from coverage data — coverage_to_histogram","text":"","code":"coverage_to_histogram(region, region_id, coverage, histogram_bin_size)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/coverage_to_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a GenomicHistogram object from coverage data — coverage_to_histogram","text":"region GRanges object representing region binned 1 GenomicHistogram region_id character, region_id resulting histogram coverage RLE object representing genome coverage histogram_bin_size integer representing width Histogram bins","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/coverage_to_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a GenomicHistogram object from coverage data — coverage_to_histogram","text":"GenomicHistogram object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_coverageplot.html","id":null,"dir":"Reference","previous_headings":"","what":"create_coverageplot creates a histogram/coverage plot with the potential to add annotations — create_coverageplot","title":"create_coverageplot creates a histogram/coverage plot with the potential to add annotations — create_coverageplot","text":"create_coverageplot creates histogram/coverage plot potential add annotations","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_coverageplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_coverageplot creates a histogram/coverage plot with the potential to add annotations — create_coverageplot","text":"","code":"create_coverageplot(   histogram_obj,   model_name,   col,   lwd,   lty,   col_distributions,   lwd_distributions,   lty_distributions,   type,   add.points,   points.x,   points.y,   points.pch,   points.col,   points.col.border,   points.cex,   filename,   main,   main.just,   main.x,   main.y,   main.cex,   xlab.label,   ylab.label,   xlab.cex,   ylab.cex,   xlab.col,   ylab.col,   xlab.top.label,   xlab.top.cex,   xlab.top.col,   xlab.top.just,   xlab.top.x,   xlab.top.y,   xlimits,   ylimits,   xat,   yat,   xaxis.lab,   yaxis.lab,   xaxis.cex,   yaxis.cex,   xaxis.rot,   yaxis.rot,   xaxis.fontface,   yaxis.fontface,   xaxis.col,   yaxis.col,   xaxis.tck,   yaxis.tck,   cex,   col.border,   pch,   alpha,   axes.lwd,   key,   legend,   top.padding,   bottom.padding,   right.padding,   left.padding,   key.top,   key.left.padding,   ylab.axis.padding,   axis.key.padding,   x.spacing,   y.spacing,   abline.h,   abline.v,   abline.col,   abline.lwd,   abline.lty,   add.rectangle,   xleft.rectangle,   ybottom.rectangle,   xright.rectangle,   ytop.rectangle,   col.rectangle,   alpha.rectangle,   add.line.segments,   line.start,   line.end,   line.col,   line.lwd,   add.text,   text.labels,   text.x,   text.y,   text.col,   text.cex,   text.fontface,   height,   width,   size.units,   resolution,   enable.warnings,   ... )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_coverageplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_coverageplot creates a histogram/coverage plot with the potential to add annotations — create_coverageplot","text":"histogram_obj `Histogram` `HistogramFit` object model_name `histogram_obj` `HistogramFit` object, one metrics used fit models \"consensus\" used plot distribution fit data, default consensus col colour coverage, default `black` lwd lwd coverage, default 1 lty lwd coverage, default 1 col_distributions colour vector distributions, colours indicated order `histogram_obj$distributions`, default see `HistogramZoo:::distribution_colours` lwd_distributions lwd vector distributions, default 2.5 lty_distributions lty vector distributions, default 1 type `type` R graphics. Default: histogram length < 50, plot `h`, otherwise `l` add.points allow additional points drawn, `histogram_obj` `HistogramFit` object, default TRUE points.x x co-ordinates additional points drawn, `histogram_obj` `HistogramFit` object, default segment_and_fit points points.y y co-ordinates additional points drawn, `histogram_obj` `HistogramFit` object, default segment_and_fit points points.pch plotting character additional points points.col colour additional points points.col.border Colour border additional points points.pch >= 21. Defaults black points.cex size additional points filename Filename tiff output, NULL returns trellis object main main title plot (space reclaimed NULL) main.just justification main title plot, default centered main.x x location main title, deault 0.5 main.y y location main title, default 0.5 main.cex Size text main plot title xlab.label x-axis label ylab.label y-axis label xlab.cex Size x-axis label, defaults 3 ylab.cex Size y-axis label, defaults 3 xlab.col Colour x-axis label, defaults “black” ylab.col Colour y-axis label, defaults “black” xlab.top.label label top x-axis xlab.top.cex Size top x-axis label xlab.top.col Colour top x-axis label xlab.top.just Justification top x-axis label, defaults centered xlab.top.x x location top x-axis label xlab.top.y y location top y-axis label xlimits Two-element vector giving x-axis limits, defaults automatic ylimits Two-element vector giving y-axis limits, defaults automatic xat Vector listing x-axis labels drawn, defaults automatic yat Vector listing y-axis labels drawn, defaults automatic xaxis.lab Vector listing x-axis tick labels, defaults automatic yaxis.lab Vector listing y-axis tick labels, defaults automatic xaxis.cex Size x-axis scales, defaults 2 yaxis.cex Size y-axis scales, defaults 2 xaxis.rot Counterclockwise rotation text x-axis scales degrees, defaults 0 yaxis.rot Counterclockwise rotation text y-axis scales degrees, defaults 0 xaxis.fontface Fontface x-axis scales yaxis.fontface Fontface y-axis scales xaxis.col Colour x-axis tick labels, defaults “black” yaxis.col Colour y-axis tick labels, defaults “black” xaxis.tck Specifies length tick mark, defaults 1 top bottom axes yaxis.tck Specifies length tick mark, defaults 1 top bottom axes cex Character expansion plotting symbol col.border Colour border points pch >= 21. Defaults “black” pch Plotting character alpha Specifies line transparency, defaults 1 (opaque) axes.lwd Thickness width axes lines key list giving key (legend). default suppresses drawing legend Add legend plot.  Helpful adding multiple keys adding keys margins plot. See xyplot. top.padding number specifying distance top margin, defaults 0.1 bottom.padding number specifying distance bottom margin, defaults 0.7 right.padding number specifying distance right margin, defaults 0.1 left.padding number specifying distance left margin, defaults 0.5 key.top number specifying distance top key, defaults 0.1 key.left.padding Amount padding go onto legend left ylab.axis.padding number specifying distance ylabel y-axis, defaults 1 axis.key.padding number specifying distance y-axis key, defaults 1 x.spacing number specifying distance panels along x-axis, defaults 0 y.spacing number specifying distance panels along y-axis, defaults 0 abline.h Allow horizontal line drawn, default NULL abline.v Allow vertical line drawn, default NULL abline.col Horizontal line colour, defaults black abline.lwd Specifies horizontal line width, defaults 1 abline.lty Specifies horizontal line style, defaults 1 (solid) add.rectangle Allow rectangle drawn, default FALSE xleft.rectangle Specifies left x ooordinate rectangle drawn ybottom.rectangle Specifies bottom y coordinate rectangle drawn xright.rectangle Specifies right x coordinate rectangle drawn ytop.rectangle Specifies top y coordinate rectangle drawn col.rectangle Specifies colour fill rectangle's area alpha.rectangle Specifies colour bias rectangle drawn add.line.segments Allow additional line segments drawn, default FALSE line.start y co-ordinates additional line segments start line.end y co-ordinates additional line segments end line.col colour additional line segments, default black line.lwd line width additional line segments, default 1 add.text Allow additional text drawn, default FALSE text.labels Labels additional text text.x x co-ordinates additional text placed text.y y co-ordinates additional text placed text.col colour additional text text.cex size additional text text.fontface fontface additional text height Figure height, defaults 6 inches width Figure width, defaults 6 inches size.units Figure units, defaults inches resolution Figure resolution dpi, defaults 1600 enable.warnings Print warnings set TRUE, defaults FALSE ... Additional arguments passed xyplot","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_coverageplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_coverageplot creates a histogram/coverage plot with the potential to add annotations — create_coverageplot","text":"Coverage plot, Trellis object. details, see 'Lattice' R package.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_coverageplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create_coverageplot creates a histogram/coverage plot with the potential to add annotations — create_coverageplot","text":"","code":"if (FALSE) { x = rnorm(10000, mean = 100, sd = 50) x = observations_to_histogram(round(x), histogram_bin_width = 5) results = segment_and_fit(x, eps = 1) create_coverageplot(   results ) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a histogram with potentially variable length bins — create_histogram","title":"Creates a histogram with potentially variable length bins — create_histogram","text":"Creates histogram potentially variable length bins","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a histogram with potentially variable length bins — create_histogram","text":"","code":"create_histogram(x, ...)  # S3 method for Histogram create_histogram(   x,   type = c(\"percent\", \"density\", \"count\"),   col = \"white\",   xat = unique(c(x$interval_start, x$interval_end)),   yat = NA,   xlab.label = \"\",   ylab.label = type,   ylimits = c(0, max(plot_data$y) + 0.05 * max(plot_data$y)),   xlimits = range(c(x$interval_start, x$interval_end)) + c(-1, 1),   ... )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a histogram with potentially variable length bins — create_histogram","text":"x Histogram ... additional arguments pass lattice::xyplot type 'percent', 'density' 'count'. Note count percentage misleading unequal bin-widths col Fill color histogram xat xat yat yat xlab.label x-axis label ylab.label y-axis label ylimits ylim lattice xlimits xlim lattice","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a histogram with potentially variable length bins — create_histogram","text":"","code":"# Equal length bin widths my_histogram <- Histogram(  histogram_data = c(1,2,3,1,5,6),  interval_start = c(0,1,2,3,4,5),  interval_end = c(1,2,3,4,5,6),  bin_width = 1,  region_id = \"my_histogram\" )  create_histogram(my_histogram, type = 'count')   my_histogram$interval_end[6] <- 10  # Defaults to density if unequal bin-widths create_histogram(my_histogram)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_layerplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Stacks together multiple plots — create_layerplot","title":"Stacks together multiple plots — create_layerplot","text":"Stacks together multiple plots","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_layerplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stacks together multiple plots — create_layerplot","text":"","code":"create_layerplot(   plot.objects = NULL,   filename = NULL,   height = 10,   width = 10,   resolution = 1000,   plot.objects.heights = rep(1, length(plot.objects)),   main = \"\",   main.x = 0.5,   main.y = 0.5,   x.spacing = 0,   y.spacing = 0,   xlab.label = \"\",   xlab.cex = 2,   ylab.label = \"\",   ylab.label.right = \"\",   ylab.cex = 2,   main.cex = 3,   legend = NULL,   left.padding = 0,   ylab.axis.padding = 0,   xlab.axis.padding = 0,   bottom.padding = 0,   top.padding = 0,   right.padding = 0,   left.legend.padding = 2,   right.legend.padding = 2,   bottom.legend.padding = 2,   top.legend.padding = 2,   size.units = \"in\",   enable.warnings = FALSE )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_layerplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stacks together multiple plots — create_layerplot","text":"plot.objects list plot objects. Goes order: Top Left, Top Right, Bottom Left, Bottom Right filename Filename output height Height resulting file width Width resulting file resolution Resolution resulting file plot.objects.heights Heights row plot. Must vector size layout.height main main label text main.x main label x coordinate main.y main label y coordinate x.spacing horizontal spacing plot. Can single value vector length layout.width - 1 y.spacing vertical spacing plot. Can single value vector length layout.height - 1 xlab.label bottom x-axis main label xlab.cex bottom x-axis main label cex ylab.label left side y-axis label ylab.label.right right side y-axis label ylab.cex y-axis label cex main.cex main label cex legend legend plot left.padding padding left side frame ylab.axis.padding padding axis y label plots. Can single value vector length layout.width xlab.axis.padding padding axis x label plots. Can single value vector length layout.height bottom.padding padding bottom side frame top.padding padding top side frame right.padding padding right side frame left.legend.padding padding legend left side figure (can use without legend) right.legend.padding padding legend right side figure (can use without legend) bottom.legend.padding padding legend bottom side figure (can use without legend) top.legend.padding padding legend top side figure (can use without legend) size.units units height width file represent enable.warnings enables warnings output","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_layerplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stacks together multiple plots — create_layerplot","text":"Trellis object. details, see 'Lattice' R package.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_layerplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stacks together multiple plots — create_layerplot","text":"","code":"if (FALSE) { x = rnorm(10000, mean = 100, sd = 50) x = observations_to_histogram(round(x), histogram_bin_width = 5) results = segment_and_fit(x, eps = 1) cvg_plt = create_coverageplot(   results ) resid_plt = create_residualplot( results )  create_layerplot( plot.objects = list(cvg_plt, resid_plt) ) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_residualplot.html","id":null,"dir":"Reference","previous_headings":"","what":"create_residualplot creates a residual plot between fitted and observed data — create_residualplot","title":"create_residualplot creates a residual plot between fitted and observed data — create_residualplot","text":"create_residualplot creates residual plot fitted observed data","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_residualplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_residualplot creates a residual plot between fitted and observed data — create_residualplot","text":"","code":"create_residualplot(   histogram_obj,   model_name,   add_changepoint_lines,   abline.h,   abline.v,   abline.col,   abline.lwd,   abline.lty,   filename,   main,   main.just,   main.x,   main.y,   main.cex,   xlab.label,   ylab.label,   xlab.cex,   ylab.cex,   xlab.col,   ylab.col,   xlab.top.label,   xlab.top.cex,   xlab.top.col,   xlab.top.just,   xlab.top.x,   xlab.top.y,   xlimits = c(histogram_obj$interval_start[1],     histogram_obj$interval_end[length(histogram_obj)]),   ylimits,   xat,   yat,   xaxis.lab,   yaxis.lab,   xaxis.cex,   yaxis.cex,   xaxis.rot,   yaxis.rot,   xaxis.fontface,   yaxis.fontface,   xaxis.col,   yaxis.col,   xaxis.tck,   yaxis.tck,   type,   cex,   pch,   col,   col.border,   lty,   lwd,   alpha,   axes.lwd,   key,   legend,   top.padding,   bottom.padding,   right.padding,   left.padding,   key.top,   key.left.padding,   ylab.axis.padding,   axis.key.padding,   x.spacing,   y.spacing,   add.rectangle,   xleft.rectangle,   ybottom.rectangle,   xright.rectangle,   ytop.rectangle,   col.rectangle,   alpha.rectangle,   add.points,   points.x,   points.y,   points.pch,   points.col,   points.col.border,   points.cex,   add.line.segments,   line.start,   line.end,   line.col,   line.lwd,   add.text,   text.labels,   text.x,   text.y,   text.col,   text.cex,   text.fontface,   height,   width,   size.units,   resolution,   enable.warnings,   ... )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_residualplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_residualplot creates a residual plot between fitted and observed data — create_residualplot","text":"histogram_obj `Histogram` `HistogramFit` object model_name one metrics used fit models (e.g. Jaccard) \"consensus\", default consensus add_changepoint_lines logical, whether vertical lines drawn residuals change positive negative vice versa, default FALSE abline.h allow horizontal line drawn, default 0 abline.v allow vertical line drawn, default NULL abline.col line colour, defaults lightgrey abline.lwd line width, defaults 0.01 abline.lty line style, defaults dotted filename Filename tiff output, NULL returns trellis object main main title plot (space reclaimed NULL) main.just justification main title plot, default centered main.x x location main title, deault 0.5 main.y y location main title, default 0.5 main.cex Size text main plot title xlab.label x-axis label ylab.label y-axis label xlab.cex Size x-axis label, defaults 3 ylab.cex Size y-axis label, defaults 3 xlab.col Colour x-axis label, defaults “black” ylab.col Colour y-axis label, defaults “black” xlab.top.label label top x-axis xlab.top.cex Size top x-axis label xlab.top.col Colour top x-axis label xlab.top.just Justification top x-axis label, defaults centered xlab.top.x x location top x-axis label xlab.top.y y location top y-axis label xlimits Two-element vector giving x-axis limits, defaults automatic ylimits Two-element vector giving y-axis limits, defaults automatic xat Vector listing x-axis labels drawn, defaults automatic yat Vector listing y-axis labels drawn, defaults automatic xaxis.lab Vector listing x-axis tick labels, defaults automatic yaxis.lab Vector listing y-axis tick labels, defaults automatic xaxis.cex Size x-axis scales, defaults 2 yaxis.cex Size y-axis scales, defaults 2 xaxis.rot Counterclockwise rotation text x-axis scales degrees, defaults 0 yaxis.rot Counterclockwise rotation text y-axis scales degrees, defaults 0 xaxis.fontface Fontface x-axis scales yaxis.fontface Fontface y-axis scales xaxis.col Colour x-axis tick labels, defaults “black” yaxis.col Colour y-axis tick labels, defaults “black” xaxis.tck Specifies length tick mark, defaults 1 top bottom axes yaxis.tck Specifies length tick mark, defaults 1 top bottom axes type Plot type cex Character expansion plotting symbol pch Plotting character col Point/line colour col.border Colour border points pch >= 21. Defaults “black” lty Specifies line style, defaults 1 (solid) lwd Specifies line width, defaults 1 alpha Specifies line transparency, defaults 1 (opaque) axes.lwd Thickness width axes lines key list giving key (legend). default suppresses drawing legend Add legend plot.  Helpful adding multiple keys adding keys margins plot. See xyplot. top.padding number specifying distance top margin, defaults 0.1 bottom.padding number specifying distance bottom margin, defaults 0.7 right.padding number specifying distance right margin, defaults 0.1 left.padding number specifying distance left margin, defaults 0.5 key.top number specifying distance top key, defaults 0.1 key.left.padding Amount padding go onto legend left ylab.axis.padding number specifying distance ylabel y-axis, defaults 1 axis.key.padding number specifying distance y-axis key, defaults 1 x.spacing number specifying distance panels along x-axis, defaults 0 y.spacing number specifying distance panels along y-axis, defaults 0 add.rectangle Allow rectangle drawn, default FALSE xleft.rectangle Specifies left x ooordinate rectangle drawn ybottom.rectangle Specifies bottom y coordinate rectangle drawn xright.rectangle Specifies right x coordinate rectangle drawn ytop.rectangle Specifies top y coordinate rectangle drawn col.rectangle Specifies colour fill rectangle's area alpha.rectangle Specifies colour bias rectangle drawn add.points Allow additional points drawn, default FALSE points.x x co-ordinates additional points drawn points.y y co-ordinates additional points drawn points.pch plotting character additional points points.col colour additional points points.col.border Colour border additional points points.pch >= 21. Defaults black points.cex size additional points add.line.segments Allow additional line segments drawn, default FALSE line.start y co-ordinates additional line segments start line.end y co-ordinates additional line segments end line.col colour additional line segments, default black line.lwd line width additional line segments, default 1 add.text Allow additional text drawn, default FALSE text.labels Labels additional text text.x x co-ordinates additional text placed text.y y co-ordinates additional text placed text.col colour additional text text.cex size additional text text.fontface fontface additional text height Figure height, defaults 6 inches width Figure width, defaults 6 inches size.units Figure units, defaults inches resolution Figure resolution dpi, defaults 1600 enable.warnings Print warnings set TRUE, defaults FALSE ... Additional arguments passed xyplot","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_residualplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_residualplot creates a residual plot between fitted and observed data — create_residualplot","text":"residual scatterplot, Trellis object. details, see 'Lattice' R package.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_residualplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create_residualplot creates a residual plot between fitted and observed data — create_residualplot","text":"","code":"if (FALSE) { x = Histogram(c(0, 0, 1, 2, 3, 2, 1, 2, 3, 4, 5, 3, 1, 0)) results = segment_and_fit(x, eps = 0.005) create_residualplot(results) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_trackplot.html","id":null,"dir":"Reference","previous_headings":"","what":"create_trackplot creates a horizontal plot with rows representing separate tracks — create_trackplot","title":"create_trackplot creates a horizontal plot with rows representing separate tracks — create_trackplot","text":"create_trackplot creates horizontal plot rows representing separate tracks","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_trackplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_trackplot creates a horizontal plot with rows representing separate tracks — create_trackplot","text":"","code":"create_trackplot(   track_data,   row_id,   metric_id,   start_id = \"start\",   end_id = \"end\",   colour_id = NULL,   colour_scheme = c(\"red\", \"blue\"),   alpha = 1,   xlimits = c(min(track_data[, start_id]), max(track_data[, end_id])),   filename = NULL,   main = NULL,   main.just = \"center\",   main.x = 0.5,   main.y = 0.5,   main.cex = 3,   xlab.label = \"Interval Coordinates\",   ylab.label = \"Row\",   xlab.cex = 2,   ylab.cex = 2,   xlab.col = \"black\",   ylab.col = \"black\",   xlab.top.label = NULL,   xlab.top.cex = 2,   xlab.top.col = \"black\",   xlab.top.just = \"center\",   xlab.top.x = 0.5,   xlab.top.y = 0,   xat = TRUE,   xaxis.lab = NA,   yaxis.lab = generate_row_ids(track_data[, row_id]),   xaxis.cex = 1.5,   yaxis.cex = 1.5,   xaxis.rot = 0,   yaxis.rot = 0,   xaxis.fontface = \"bold\",   yaxis.fontface = \"bold\",   xaxis.col = \"black\",   yaxis.col = \"black\",   xaxis.tck = c(1, 1),   yaxis.tck = c(1, 1),   add.grid = FALSE,   xgrid.at = xat,   grid.colour = NULL,   axes.lwd = 1,   key = list(text = list(lab = c(\"\"))),   legend = NULL,   top.padding = 0.1,   bottom.padding = 0.7,   right.padding = 0.1,   left.padding = 0.5,   key.top = 0.1,   key.left.padding = 0,   ylab.axis.padding = 1,   axis.key.padding = 1,   add.axes = FALSE,   axes.lty = \"dashed\",   abline.h = NULL,   abline.v = NULL,   abline.col = \"black\",   abline.lwd = 1,   abline.lty = 1,   add.points = FALSE,   points.x = NULL,   points.y = NULL,   points.pch = 19,   points.col = \"black\",   points.col.border = \"black\",   points.cex = 1,   add.line.segments = FALSE,   line.start = NULL,   line.end = NULL,   line.col = \"black\",   line.lwd = 1,   height = 6,   width = 6,   size.units = \"in\",   resolution = 1600,   enable.warnings = FALSE,   ... )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_trackplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_trackplot creates a horizontal plot with rows representing separate tracks — create_trackplot","text":"track_data dataframe detailing segments `start_id` start position segment, based histogram vector index `end_id` end position segment, based histogram vector index `metric_id` values; numeric data plotting `row_id` character factor; identifier row `colour_id` colour row row_id character, column name used indicate track row metric_id character, column name metric column start_id character, column name used indicate start intervals, default \"start\" end_id character, column name used indicate end intervals, default \"end\" colour_id character, optional, column name colour track colour_scheme two colour scheme scale numeric data `metric_id` column, default white, black alpha alpha (transparency) tracks, default 1 xlimits numeric vector length 2 indicating start end indices track respectively filename Filename tiff output, NULL returns trellis object main main title plot (space reclaimed NULL) main.just justification main title plot, default centered main.x x location main title, deault 0.5 main.y y location main title, default 0.5 main.cex Size text main plot title xlab.label x-axis label ylab.label y-axis label xlab.cex Size x-axis label, defaults 3 ylab.cex Size y-axis label, defaults 3 xlab.col Colour x-axis label, defaults “black” ylab.col Colour y-axis label, defaults “black” xlab.top.label label top x-axis xlab.top.cex Size top x-axis label xlab.top.col Colour top x-axis label xlab.top.just Justification top x-axis label, defaults centered xlab.top.x x location top x-axis label xlab.top.y y location top y-axis label xat Vector listing x-axis labels drawn, defaults automatic xaxis.lab Vector listing x-axis tick labels, defaults automatic yaxis.lab Vector listing y-axis tick labels, defaults automatic xaxis.cex Size x-axis scales, defaults 2 yaxis.cex Size y-axis scales, defaults 2 xaxis.rot Counterclockwise rotation text x-axis scales degrees, defaults 0 yaxis.rot Counterclockwise rotation text y-axis scales degrees, defaults 0 xaxis.fontface Fontface x-axis scales yaxis.fontface Fontface y-axis scales xaxis.col Colour x-axis tick labels, defaults “black” yaxis.col Colour y-axis tick labels, defaults “black” xaxis.tck Specifies length tick mark, defaults 1 top bottom axes yaxis.tck Specifies length tick mark, defaults 1 top bottom axes add.grid Logical stating wheter grid drawn plot xgrid.Vector listing x-axis grid lines drawn, defaults xat grid.colour ability set individual grid line colours axes.lwd Thickness width axes lines key list giving key (legend). default suppresses drawing legend Add legend plot.  Helpful adding multiple keys adding keys margins plot. See xyplot. top.padding number specifying distance top margin, defaults 0.1 bottom.padding number specifying distance bottom margin, defaults 0.7 right.padding number specifying distance right margin, defaults 0.1 left.padding number specifying distance left margin, defaults 0.5 key.top number specifying distance top key, defaults 0.1 key.left.padding Amount padding go onto legend left ylab.axis.padding number specifying distance ylabel y-axis, defaults 1 axis.key.padding number specifying distance y-axis key, defaults 1 add.axes Allow axis lines turned , default FALSE axes.lty Specifies axis line style, defaults “dashed” abline.h Allow horizontal line drawn, default NULL abline.v Allow vertical line drawn, default NULL abline.col Horizontal line colour, defaults black abline.lwd Specifies horizontal line width, defaults 1 abline.lty Specifies horizontal line style, defaults 1 (solid) add.points Allow additional points drawn, default FALSE points.x x co-ordinates additional points drawn points.y y co-ordinates additional points drawn points.pch plotting character additional points points.col colour additional points points.col.border Colour border additional points points.pch >= 21. Defaults black points.cex size additional points add.line.segments Allow additional line segments drawn, default FALSE line.start y co-ordinates additional line segments start line.end y co-ordinates additional line segments end line.col colour additional line segments, default black line.lwd line width additional line segments, default 1 height Figure height, defaults 6 inches width Figure width, defaults 6 inches size.units Figure units, defaults inches resolution Figure resolution dpi, defaults 1600 enable.warnings Print warnings set TRUE, defaults FALSE ... Additional arguments passed BoutrosLab.plotting.general::create.scatterplot","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_trackplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_trackplot creates a horizontal plot with rows representing separate tracks — create_trackplot","text":"Track plot, Trellis object. details, see 'Lattice' R package.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/create_trackplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create_trackplot creates a horizontal plot with rows representing separate tracks — create_trackplot","text":"","code":"if (FALSE) { x = Histogram(c(0, 0, 1, 2, 3, 2, 1, 2, 3, 4, 5, 3, 1, 0)) results = segment_and_fit(x, eps = 0.005) results_table = summarize_results(results) create_trackplot( track_data = results_table, row_id = \"peak_id\", metric_id = \"value\" ) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dgamma_flip.html","id":null,"dir":"Reference","previous_headings":"","what":"gamma flip — dgamma_flip","title":"gamma flip — dgamma_flip","text":"gamma flip","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dgamma_flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gamma flip — dgamma_flip","text":"","code":"dgamma_flip(x, shape, rate = 1, offset = 0, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dgamma_flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gamma flip — dgamma_flip","text":"x numeric vector quantiles shape shape parameter gamma distribution rate rate parameter gamma distribution, default 1 offset offset right end distribution ... additional parameters passed stats::dgamma","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dgamma_flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gamma flip — dgamma_flip","text":"density distribution","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dput_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a string representation of an object — dput_str","title":"Return a string representation of an object — dput_str","text":"Return string representation object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dput_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a string representation of an object — dput_str","text":"","code":"dput_str(x)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dput_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a string representation of an object — dput_str","text":"x object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dput_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a string representation of an object — dput_str","text":"character representation `x`","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dtgamma.html","id":null,"dir":"Reference","previous_headings":"","what":"truncated gamma — dtgamma","title":"truncated gamma — dtgamma","text":"truncated gamma","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dtgamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"truncated gamma — dtgamma","text":"","code":"dtgamma(x, shape, rate = 1, a = 0, b = Inf, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dtgamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"truncated gamma — dtgamma","text":"x numeric vector quantiles shape shape parameter gamma distribution rate rate parameter gamma distribution, default 1 distribution start b distribution end ... additional parameters passed truncdist::dtrunc","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dtgamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"truncated gamma — dtgamma","text":"density distribution","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dtgamma_flip.html","id":null,"dir":"Reference","previous_headings":"","what":"truncated gamma flip — dtgamma_flip","title":"truncated gamma flip — dtgamma_flip","text":"truncated gamma flip","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dtgamma_flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"truncated gamma flip — dtgamma_flip","text":"","code":"dtgamma_flip(x, shape, rate = 1, a = 0, b = NULL, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dtgamma_flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"truncated gamma flip — dtgamma_flip","text":"x numeric vector quantiles shape shape parameter gamma distribution rate rate parameter gamma distribution, default 1 distribution start b distribution end ... additional parameters passed truncdist::dtrunc","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/dtgamma_flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"truncated gamma flip — dtgamma_flip","text":"density distribution","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/extract_segments.html","id":null,"dir":"Reference","previous_headings":"","what":"Represent a single segment as a set of intervals — extract_segments","title":"Represent a single segment as a set of intervals — extract_segments","text":"Represent single segment set intervals","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/extract_segments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Represent a single segment as a set of intervals — extract_segments","text":"","code":"extract_segments(iranges)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/extract_segments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Represent a single segment as a set of intervals — extract_segments","text":"iranges IRanges object intervals representing intervals single segment","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/extract_segments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Represent a single segment as a set of intervals — extract_segments","text":"list following data representing single segment start interval start segment end interval end segment interval_count number intervals segment - used collapsing disjoint intervals interval_sizes width interval interval_starts start index interval","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/extract_stats_from_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract stats from models — extract_stats_from_models","title":"Extract stats from models — extract_stats_from_models","text":"Extract stats models","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/extract_stats_from_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract stats from models — extract_stats_from_models","text":"","code":"extract_stats_from_models(model_list, model_name = \"consensus\")"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/extract_stats_from_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract stats from models — extract_stats_from_models","text":"model_list list models represented nested list, like output `fit_distributions` model_name character, name model stats extracted","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/extract_stats_from_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract stats from models — extract_stats_from_models","text":"list following data representing single segment histogram_start start index segment Histogram representation histogram_end end index segment Histogram representation value fitted value metric function metric metric used fit distribution dist distribution name params parameters distribution","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_all_meaningful_gap.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all meaningful gaps — find_all_meaningful_gap","title":"Find all meaningful gaps — find_all_meaningful_gap","text":"Find meaningful gaps","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_all_meaningful_gap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all meaningful gaps — find_all_meaningful_gap","text":"","code":"find_all_meaningful_gap(x, change_points)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_all_meaningful_gap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all meaningful gaps — find_all_meaningful_gap","text":"x numeric vector representing density histogram change_points change points (e.g. local min/max) vector x","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_all_meaningful_gap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all meaningful gaps — find_all_meaningful_gap","text":"data.frame columns start start index histogram count vector end end index histogram count vector mgap max gap score entropy relative entropy segment uniform distribution","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_change_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Find changepoints in a vector with uniform stretches of values — find_change_points","title":"Find changepoints in a vector with uniform stretches of values — find_change_points","text":"Find changepoints vector uniform stretches values","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_change_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find changepoints in a vector with uniform stretches of values — find_change_points","text":"","code":"find_change_points(x)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_change_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find changepoints in a vector with uniform stretches of values — find_change_points","text":"x numeric vector","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_consecutive_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the indices for consecutive elements of a vector that are greater than a specified threshold — find_consecutive_threshold","title":"Returns the indices for consecutive elements of a vector that are greater than a specified threshold — find_consecutive_threshold","text":"Returns indices consecutive elements vector greater specified threshold","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_consecutive_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the indices for consecutive elements of a vector that are greater than a specified threshold — find_consecutive_threshold","text":"","code":"find_consecutive_threshold(x, threshold = 0)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_consecutive_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the indices for consecutive elements of a vector that are greater than a specified threshold — find_consecutive_threshold","text":"x numeric vector threshold numeric threshold","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_consecutive_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the indices for consecutive elements of a vector that are greater than a specified threshold — find_consecutive_threshold","text":"list coordinates `start` `end` coordinates","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_consecutive_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the indices for consecutive elements of a vector that are greater than a specified threshold — find_consecutive_threshold","text":"","code":"find_consecutive_threshold(c(0,0,0,1,1,1,0,0,0,1,1,1,0,0)) #> $start #> [1]  4 10 #>  #> $end #> [1]  6 12 #>  find_consecutive_threshold(c(0,0,1,2,2,0,1,1,1,0,0), threshold = 1) #> $start #> [1] 4 #>  #> $end #> [1] 5 #>"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_consensus_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for voting for a consensus model based on the metrics of fit_distributions — find_consensus_model","title":"Methods for voting for a consensus model based on the metrics of fit_distributions — find_consensus_model","text":"Methods voting consensus model based metrics fit_distributions","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_consensus_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for voting for a consensus model based on the metrics of fit_distributions — find_consensus_model","text":"","code":"find_consensus_model(   models,   method = c(\"weighted_majority_vote\", \"rra\"),   metric = unique(sapply(models, `[[`, \"metric\")),   distribution_prioritization = c(\"norm\", \"unif\", \"gamma\", \"gamma_flip\"),   weights = rev(sqrt(seq(1, 6))[1:length(metric)]) )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_consensus_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for voting for a consensus model based on the metrics of fit_distributions — find_consensus_model","text":"models list models, e.g. derived `fit_distributions` method one `weighted_majority_vote` `rra` method determining best method. `rra` requires package `RobustRankAggreg` metric metrics used fit models. Metrics ordered descending priority. first metric vector used return `consensus` model distribution determined voting. distribution_prioritization `method` `weighted_majority_voting`, list ranked distributions, break ties weights required `method` `weighted_majority_voting`. weights metric multiplied rankings. Weights decreasing order. higher weight results higher priority metric.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_consensus_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for voting for a consensus model based on the metrics of fit_distributions — find_consensus_model","text":"list best model metric `consensus` model representing model consensus distribution lowest weighted metric. model list following data: par character string denoting region_id Histogram dist distribution name metric metric used fit distribution value fitted value metric function dens function returns density fitted distribution seg_start start index interval seg_end end index interval","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_consensus_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for voting for a consensus model based on the metrics of fit_distributions — find_consensus_model","text":"","code":"if (FALSE) {  data <- observations_to_histogram(rnorm(10000, mean = 20, sd = 10))  data <- data$histogram_data  models <- fit_distributions(data)  find_consensus_models(models)  }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_local_optima.html","id":null,"dir":"Reference","previous_headings":"","what":"find_local_optima returns the local optima of histograms — find_local_optima","title":"find_local_optima returns the local optima of histograms — find_local_optima","text":"find_local_optima returns local optima histograms","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_local_optima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"find_local_optima returns the local optima of histograms — find_local_optima","text":"","code":"find_local_optima(x, threshold = 0, flat_endpoints = T)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_local_optima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"find_local_optima returns the local optima of histograms — find_local_optima","text":"x numeric vector representing density histogram threshold threshold local optima, .e. point can considered local optima differs neighbour optima greater permitted threshold, default 0 flat_endpoints regions flat density, whether return endpoints midpoints","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_local_optima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"find_local_optima returns the local optima of histograms — find_local_optima","text":"list two vectors min_ind indices local minima max_ind indices local maxima","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/find_local_optima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"find_local_optima returns the local optima of histograms — find_local_optima","text":"","code":"if (FALSE) { x <- c(1,2,3,2,1,2,3,2,1) find_local_optima(x) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/fit_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the model parameters by optimizing a histogram metric — fit_distributions","title":"Fit the model parameters by optimizing a histogram metric — fit_distributions","text":"Fit model parameters optimizing histogram metric","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/fit_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the model parameters by optimizing a histogram metric — fit_distributions","text":"","code":"fit_distributions(   x,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\"),   truncated = FALSE,   distributions = c(\"norm\", \"gamma\", \"gamma_flip\", \"unif\") )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/fit_distributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the model parameters by optimizing a histogram metric — fit_distributions","text":"x numeric vector, representing data fit metric subset `mle`, `jaccard`, `intersection`, `ks`, `mse`, `chisq` indicating metrics use fit optimization truncated logical, whether fit truncated distributions distributions character vector indicating distributions, subset `norm`, `gamma`, `gamma_flip` `unif`.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/fit_distributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the model parameters by optimizing a histogram metric — fit_distributions","text":"nested list sublist represents model following data par character string denoting region_id Histogram dist distribution name metric metric used fit distribution value fitted value metric function dens function returns density fitted distribution","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/fit_uniform.numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a uniform distribution to a histogram — fit_uniform.numeric","title":"Fit a uniform distribution to a histogram — fit_uniform.numeric","text":"Fit uniform distribution histogram","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/fit_uniform.numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a uniform distribution to a histogram — fit_uniform.numeric","text":"","code":"# S3 method for numeric fit_uniform(   x,   metric = c(\"mle\", \"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\") )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/fit_uniform.numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a uniform distribution to a histogram — fit_uniform.numeric","text":"x numeric vector representing density histogram metric one `jaccard`, `intersection`, `ks`, `mse`, `chisq`","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/fit_uniform.numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a uniform distribution to a histogram — fit_uniform.numeric","text":"list following data par character string denoting region_id Histogram dist distribution name metric metric used fit distribution value fitted value metric function dens function returns density fitted distribution","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/format_print_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Formats print intervals with introns and one-bp bins — format_print_intervals","title":"Formats print intervals with introns and one-bp bins — format_print_intervals","text":"Formats print intervals introns one-bp bins","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/format_print_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formats print intervals with introns and one-bp bins — format_print_intervals","text":"","code":"format_print_intervals(interval_start, interval_end, bin_size_one, intron_bins)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ftc.html","id":null,"dir":"Reference","previous_headings":"","what":"Fine-to-coarse segmentation algorithm — ftc","title":"Fine-to-coarse segmentation algorithm — ftc","text":"Fine--coarse segmentation algorithm","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ftc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fine-to-coarse segmentation algorithm — ftc","text":"","code":"ftc(x, s = NULL, eps = 1)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ftc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fine-to-coarse segmentation algorithm — ftc","text":"x numeric vector representing density histogram s numeric vector representing initial segmentation indices eps numeric hyperparameter epsilon used scale resolution segmentation","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ftc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fine-to-coarse segmentation algorithm — ftc","text":"vector points representing boundaries histograms","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ftc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fine-to-coarse segmentation algorithm — ftc","text":"","code":"if (FALSE) { x = c(0, 1, 2, 3, 4, 3, 2, 1, 0, 0, 0, 1, 2, 1, 0) s = c(1, 9, 11, 15) ftc(x = x, s = s, eps = 1) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_granges_from_parent_and_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for coverage_to_histogram that returns a dataframe from a set of ranges — generate_granges_from_parent_and_ranges","title":"A helper function for coverage_to_histogram that returns a dataframe from a set of ranges — generate_granges_from_parent_and_ranges","text":"helper function coverage_to_histogram returns dataframe set ranges","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_granges_from_parent_and_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for coverage_to_histogram that returns a dataframe from a set of ranges — generate_granges_from_parent_and_ranges","text":"","code":"generate_granges_from_parent_and_ranges(parent, ranges_dataframe)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_granges_from_parent_and_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for coverage_to_histogram that returns a dataframe from a set of ranges — generate_granges_from_parent_and_ranges","text":"parent GRange object extract chromosome strand ranges_dataframe dataframe `start` `end` columns representing genomic coordinates new GRanges object return GRanges object chromosome strand parent ranges ranges_dataframe","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates region_ids for GRanges objects — generate_identifiers","title":"Generates region_ids for GRanges objects — generate_identifiers","text":"Generates region_ids GRanges objects","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates region_ids for GRanges objects — generate_identifiers","text":"","code":"generate_identifiers(gr)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_identifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates region_ids for GRanges objects — generate_identifiers","text":"gr GRanges object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates region_ids for GRanges objects — generate_identifiers","text":"character identifiers ranges GRanges object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_row_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates row names from row data — generate_row_ids","title":"Generates row names from row data — generate_row_ids","text":"Generates row names row data","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_row_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates row names from row data — generate_row_ids","text":"","code":"generate_row_ids(row_data)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_row_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates row names from row data — generate_row_ids","text":"row_data vector row data","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_row_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates row names from row data — generate_row_ids","text":"vector row names","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_uniform_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform density generation — generate_uniform_distribution","title":"Uniform density generation — generate_uniform_distribution","text":"Uniform density generation","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_uniform_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform density generation — generate_uniform_distribution","text":"","code":"generate_uniform_distribution(x)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_uniform_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform density generation — generate_uniform_distribution","text":"x numeric vector representing density histogram","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_uniform_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform density generation — generate_uniform_distribution","text":"vector uniform density length x","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_xlabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates x labels for histogram-based plots, `create_coverageplot` and `create_residualplot` — generate_xlabels","title":"Generates x labels for histogram-based plots, `create_coverageplot` and `create_residualplot` — generate_xlabels","text":"Generates x labels histogram-based plots, `create_coverageplot` `create_residualplot`","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_xlabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates x labels for histogram-based plots, `create_coverageplot` and `create_residualplot` — generate_xlabels","text":"","code":"generate_xlabels(histogram_obj, n_labels = 5, return_xat = F, disjoint = T)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_xlabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates x labels for histogram-based plots, `create_coverageplot` and `create_residualplot` — generate_xlabels","text":"histogram_obj `Histogram` `HistogramFit` object n_labels number x axis labels return_xat logical, whether return indices labels, default FALSE, returns labels disjoint logical, whether check `histogram_obj` contains disjoint intervals. found breakpoints labelled disjoint intervals found, x labels default standard","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_xlabels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates x labels for histogram-based plots, `create_coverageplot` and `create_residualplot` — generate_xlabels","text":"vector labels (character) indices (numeric)","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/generate_xlabels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates x labels for histogram-based plots, `create_coverageplot` and `create_residualplot` — generate_xlabels","text":"","code":"if (FALSE) {  x <- observations_to_histogram(rnorm(10000))  generate_xlabels(x, n_labels = 5, xat = F, disjoint = F) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/genome_BED_to_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate GenomicHistogram objects from BED files — genome_BED_to_histogram","title":"Generate GenomicHistogram objects from BED files — genome_BED_to_histogram","text":"Generate GenomicHistogram objects BED files","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/genome_BED_to_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate GenomicHistogram objects from BED files — genome_BED_to_histogram","text":"","code":"genome_BED_to_histogram(   filenames,   n_fields = c(4, 6, 12),   regions = NULL,   histogram_bin_size = 1,   allow_overlapping_segments_per_sample = F )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/genome_BED_to_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate GenomicHistogram objects from BED files — genome_BED_to_histogram","text":"filenames vector BED filenames. `name` column BED files must indicate gene transcript name. n_fields Number columns BED file conform BED file standards. Default 4 regions GRanges GRangesList object representing regions interest defining histograms, GRangesList object allows specification non-continuous segments, default NULL - regions taken set elements nonzero coverage histogram_bin_size bin size (base-pairs) bin signal histogram. Default 1 allow_overlapping_segments_per_sample logical, FALSE, overlapping segments file de-duplicated coverage calculation, TRUE, taken separate input, default FALSE","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/genome_BED_to_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate GenomicHistogram objects from BED files — genome_BED_to_histogram","text":"list GenomicHistogram objects","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/genome_BED_to_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate GenomicHistogram objects from BED files — genome_BED_to_histogram","text":"","code":"if (FALSE) { datadir <- system.file(\"extdata\", \"dna_bedfiles\",  package = \"HistogramZoo\") filenames <- list.files(datadir, pattern = \".bed$\") filenames <- file.path(datadir, filenames) histograms <- genome_BED_to_histogram( filenames = filenames, n_fields = 6, histogram_bin_size = 1) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/grenader.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Grenander estimator of a given density vector — grenader","title":"Calculate the Grenander estimator of a given density vector — grenader","text":"Calculate Grenander estimator given density vector","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/grenader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Grenander estimator of a given density vector — grenader","text":"","code":"grenader(x, increasing = T)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/grenader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Grenander estimator of a given density vector — grenader","text":"x numeric vector representing density histogram increasing logical, whether Grenander estimator assume x increasing decreasing","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/grenader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Grenander estimator of a given density vector — grenader","text":"numeric vector length `x` representing Grenander estimator `x`","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.chisq.html","id":null,"dir":"Reference","previous_headings":"","what":"Chi-squared — histogram.chisq","title":"Chi-squared — histogram.chisq","text":"Chi-squared","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.chisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chi-squared — histogram.chisq","text":"","code":"histogram.chisq(x, y)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.chisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chi-squared — histogram.chisq","text":"x histogram (vector counts) 1 y histogram (vector counts) 2","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.chisq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chi-squared — histogram.chisq","text":"chi-squared distance x y","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.intersection.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram intersection — histogram.intersection","title":"Histogram intersection — histogram.intersection","text":"Histogram intersection","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.intersection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram intersection — histogram.intersection","text":"","code":"histogram.intersection(x, y)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.intersection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram intersection — histogram.intersection","text":"x histogram (vector counts) 1 y histogram (vector counts) 2","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.intersection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram intersection — histogram.intersection","text":"intersection x y","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.jaccard.html","id":null,"dir":"Reference","previous_headings":"","what":"Jaccard index — histogram.jaccard","title":"Jaccard index — histogram.jaccard","text":"Jaccard index","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.jaccard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jaccard index — histogram.jaccard","text":"","code":"histogram.jaccard(x, y)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.jaccard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jaccard index — histogram.jaccard","text":"x histogram (vector counts) 1 y histogram (vector counts) 2","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.jaccard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jaccard index — histogram.jaccard","text":"jaccard similarity x y","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.ks.html","id":null,"dir":"Reference","previous_headings":"","what":"Kolmogorov-Smirnov divergence — histogram.ks","title":"Kolmogorov-Smirnov divergence — histogram.ks","text":"Kolmogorov-Smirnov divergence","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.ks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kolmogorov-Smirnov divergence — histogram.ks","text":"","code":"histogram.ks(x, y)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.ks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kolmogorov-Smirnov divergence — histogram.ks","text":"x histogram (vector counts) 1 y histogram (vector counts) 2","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.ks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kolmogorov-Smirnov divergence — histogram.ks","text":"Kolmogorov-Smirnov divergence x y","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.mse.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean-squared error — histogram.mse","title":"Mean-squared error — histogram.mse","text":"Mean-squared error","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.mse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean-squared error — histogram.mse","text":"","code":"histogram.mse(x, y)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.mse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean-squared error — histogram.mse","text":"x histogram (vector counts) 1 y histogram (vector counts) 2","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/histogram.mse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean-squared error — histogram.mse","text":"mean-squared error x y","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/identify_uniform_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds the largest uniform segment that is longer than threshold — identify_uniform_segment","title":"Finds the largest uniform segment that is longer than threshold — identify_uniform_segment","text":"Finds largest uniform segment longer threshold","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/identify_uniform_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds the largest uniform segment that is longer than threshold — identify_uniform_segment","text":"","code":"identify_uniform_segment(   x,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\"),   threshold = 0.5,   stepsize = 1,   max_sd_size = 1 )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/identify_uniform_segment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds the largest uniform segment that is longer than threshold — identify_uniform_segment","text":"x numeric vector representing density histogram metric one `jaccard`, `intersection`, `ks`, `mse`, `chisq` indicating metrics use fit optimization threshold numeric, indicating minimum proportion subsegment tested stepsize integer, indicating stepsize (relative histogram bins) take search uniform subsegment max_sd_size numeric, number standard deviations computed metric distribution away optimal uniform maximum length","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/identify_uniform_segment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds the largest uniform segment that is longer than threshold — identify_uniform_segment","text":"list representing uniform model following data par character string denoting region_id Histogram dist distribution name metric metric used fit distribution value fitted value metric function dens function returns density fitted distribution seg_start start index interval seg_end end index interval","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/index_to_start_end.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a vector of points into a data.frame of start/end points representing\ndisjoint intervals — index_to_start_end","title":"Convert a vector of points into a data.frame of start/end points representing\ndisjoint intervals — index_to_start_end","text":"Convert vector points data.frame start/end points representing disjoint intervals","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/index_to_start_end.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a vector of points into a data.frame of start/end points representing\ndisjoint intervals — index_to_start_end","text":"","code":"index_to_start_end(p, right = TRUE)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/index_to_start_end.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a vector of points into a data.frame of start/end points representing\ndisjoint intervals — index_to_start_end","text":"p integer, vector points broken intervals right logical, whether points represent interval starts (FALSE) interval ends (TRUE), default TRUE","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/index_to_start_end.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a vector of points into a data.frame of start/end points representing\ndisjoint intervals — index_to_start_end","text":"data.frame column: start end representing start end points intervals","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/index_to_start_end.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a vector of points into a data.frame of start/end points representing\ndisjoint intervals — index_to_start_end","text":"","code":"if (FALSE) { index_to_start_end(c(1,5,10)) index_to_start_end(c(1,5,10), right = FALSE) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/is_equal_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if a numeric vector can be used as an integer vector — is_equal_integer","title":"Checks if a numeric vector can be used as an integer vector — is_equal_integer","text":"Checks numeric vector can used integer vector","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/is_equal_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if a numeric vector can be used as an integer vector — is_equal_integer","text":"","code":"is_equal_integer(x)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/is_equal_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if a numeric vector can be used as an integer vector — is_equal_integer","text":"x numeric vector","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/is_equal_integer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if a numeric vector can be used as an integer vector — is_equal_integer","text":"logical, whether `x` integer integer vector","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/labels_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function that generates labels at specific Histogram bins — labels_helper","title":"A helper function that generates labels at specific Histogram bins — labels_helper","text":"helper function generates labels specific Histogram bins","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/labels_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function that generates labels at specific Histogram bins — labels_helper","text":"","code":"labels_helper(histogram_obj, xat)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/labels_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function that generates labels at specific Histogram bins — labels_helper","text":"histogram_obj `Histogram` `HistogramFit` object xat indices Histogram generate labels","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/labels_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function that generates labels at specific Histogram bins — labels_helper","text":"labels `xat` coordinates","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/maximal_meaningful_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies the maximum meaningful interval from a set of overlapping\nintervals, can also be applied to find the max gap — maximal_meaningful_interval","title":"Identifies the maximum meaningful interval from a set of overlapping\nintervals, can also be applied to find the max gap — maximal_meaningful_interval","text":"Identifies maximum meaningful interval set overlapping intervals, can also applied find max gap","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/maximal_meaningful_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies the maximum meaningful interval from a set of overlapping\nintervals, can also be applied to find the max gap — maximal_meaningful_interval","text":"","code":"maximal_meaningful_interval(x)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/maximal_meaningful_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies the maximum meaningful interval from a set of overlapping\nintervals, can also be applied to find the max gap — maximal_meaningful_interval","text":"x data.frame columns start start index histogram count vector end end index histogram count vector entropy relative entropy segment uniform distribution","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/maximal_meaningful_interval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies the maximum meaningful interval from a set of overlapping\nintervals, can also be applied to find the max gap — maximal_meaningful_interval","text":"data.frame columns + index preserved rows original data.frame","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/maximum_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes H, the maximum H_h,p([a,b]) — maximum_entropy","title":"Computes H, the maximum H_h,p([a,b]) — maximum_entropy","text":"Computes H, maximum H_h,p([,b])","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/maximum_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes H, the maximum H_h,p([a,b]) — maximum_entropy","text":"","code":"maximum_entropy(x, s = NULL, increasing = TRUE)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/maximum_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes H, the maximum H_h,p([a,b]) — maximum_entropy","text":"x numeric vector representing density histogram s numeric vector representing initial segmentation indices increasing logical, whether Grenander estimator assume x increasing decreasing","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/maximum_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes H, the maximum H_h,p([a,b]) — maximum_entropy","text":"numeric vector, representing maximum relative entropy subsegments `h` (distribution normalizing `x`) `p` (Grenander estimator x)","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/meaningful_gap.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines whether h[a,b] is a meaningful gap — meaningful_gap","title":"Determines whether h[a,b] is a meaningful gap — meaningful_gap","text":"Determines whether h[,b] meaningful gap","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/meaningful_gap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines whether h[a,b] is a meaningful gap — meaningful_gap","text":"","code":"meaningful_gap(h, p, a, b, N, L)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/meaningful_gap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines whether h[a,b] is a meaningful gap — meaningful_gap","text":"h density distribution p density reference distribution start index subset density b end index subset density N number data points L length interval","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/meaningful_gap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines whether h[a,b] is a meaningful gap — meaningful_gap","text":"vector length 2: binary indicating whether h[,b] meaningful gap, relative entropy interval","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/meaningful_gaps_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds the meaningful gaps between the points in s — meaningful_gaps_local","title":"Finds the meaningful gaps between the points in s — meaningful_gaps_local","text":"Finds meaningful gaps points s","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/meaningful_gaps_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds the meaningful gaps between the points in s — meaningful_gaps_local","text":"","code":"meaningful_gaps_local(x, seg_points, change_points, min_gap = 2)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/meaningful_gaps_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds the meaningful gaps between the points in s — meaningful_gaps_local","text":"x numeric vector representing density histogram seg_points segment points vector x change_points change points (e.g. local min/max) vector x min_gap minimum gap considered meaningful gap","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/meaningful_gaps_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds the meaningful gaps between the points in s — meaningful_gaps_local","text":"data.frame columns start start index histogram count vector end end index histogram count vector mgap max gap score entropy relative entropy segment uniform distribution","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/meaningful_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines whether h[a,b] is a meaningful interval — meaningful_interval","title":"Determines whether h[a,b] is a meaningful interval — meaningful_interval","text":"Determines whether h[,b] meaningful interval","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/meaningful_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines whether h[a,b] is a meaningful interval — meaningful_interval","text":"","code":"meaningful_interval(h, p, a, b, N, L)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/meaningful_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines whether h[a,b] is a meaningful interval — meaningful_interval","text":"h density distribution p density reference distribution start index subset density b end index subset density N number data points L length interval","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/meaningful_interval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines whether h[a,b] is a meaningful interval — meaningful_interval","text":"vector length 2: binary indicating whether h[,b] meaningful interval, relative entropy interval","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/monotone_cost.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the monotone cost, — monotone_cost","title":"Compute the monotone cost, — monotone_cost","text":"Compute monotone cost,","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/monotone_cost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the monotone cost, — monotone_cost","text":"","code":"monotone_cost(x, s = NULL, eps = 1, increasing = TRUE)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/monotone_cost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the monotone cost, — monotone_cost","text":"x numeric vector representing density histogram s numeric vector representing initial segmentation indices eps numeric hyperparameter epsilon used scale resolution segmentation increasing logical, whether Grenander estimator assume x increasing decreasing","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/monotone_cost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the monotone cost, — monotone_cost","text":"numeric, monotone cost","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/new_GenomicHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"GenomicHistogram constructor — new_GenomicHistogram","title":"GenomicHistogram constructor — new_GenomicHistogram","text":"GenomicHistogram constructor","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/new_GenomicHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GenomicHistogram constructor — new_GenomicHistogram","text":"","code":"new_GenomicHistogram(   histogram_data = NULL,   interval_start = NULL,   interval_end = NULL,   region_id = NULL,   bin_width = NULL,   chr = NULL,   strand = NULL,   intron_start = NULL,   intron_end = NULL )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/new_GenomicHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GenomicHistogram constructor — new_GenomicHistogram","text":"histogram_data vector counts/density interval_start integer vector representing starts intervals interval_end integer vector representing ends intervals region_id character identifier region interest bin_width integer width histogram bins, missing, estimated `interval_start` `interval_end` chr chromosome name strand strand intron_start integer vector representing starts introns intron_end integer vector representing ends introns","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/new_GenomicHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GenomicHistogram constructor — new_GenomicHistogram","text":"GenomicHistogram object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/new_Histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a new Histogram object — new_Histogram","title":"Constructs a new Histogram object — new_Histogram","text":"Constructs new Histogram object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/new_Histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a new Histogram object — new_Histogram","text":"","code":"new_Histogram(   histogram_data = NULL,   interval_start = NULL,   interval_end = NULL,   bin_width = NULL,   region_id = NULL,   class = character(),   ... )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/new_Histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a new Histogram object — new_Histogram","text":"histogram_data vector counts/density interval_start numeric vector representing starts intervals interval_end numeric vector representing ends intervals bin_width numeric bin width histogram intervals region_id character identifier region interest class child class names, addition Histogram ... additional parameters, allowing child classes built","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/new_Histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a new Histogram object — new_Histogram","text":"Histogram object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/observations_to_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a vector of values and get the histogram for integer breaks — observations_to_histogram","title":"Take a vector of values and get the histogram for integer breaks — observations_to_histogram","text":"Take vector values get histogram integer breaks","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/observations_to_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a vector of values and get the histogram for integer breaks — observations_to_histogram","text":"","code":"observations_to_histogram(x, histogram_bin_width = 1)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/observations_to_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a vector of values and get the histogram for integer breaks — observations_to_histogram","text":"x vector observations histogram_bin_width Size histogram bin, assuming base 1 system","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/observations_to_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a vector of values and get the histogram for integer breaks — observations_to_histogram","text":"Histogram object representing counts data","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/observations_to_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take a vector of values and get the histogram for integer breaks — observations_to_histogram","text":"","code":"if (FALSE)  observations_to_histogram(sample(1:10, 100, replace = T))"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/pgamma_flip.html","id":null,"dir":"Reference","previous_headings":"","what":"gamma flip — pgamma_flip","title":"gamma flip — pgamma_flip","text":"gamma flip","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/pgamma_flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gamma flip — pgamma_flip","text":"","code":"pgamma_flip(q, shape, rate = 1, offset = 0, lower.tail = TRUE, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/pgamma_flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gamma flip — pgamma_flip","text":"q numeric vector quantiles shape shape parameter gamma distribution rate rate parameter gamma distribution, default 1 offset offset right end distribution lower.tail logical; TRUE (default), probabilities     \\(P[X \\le x]\\), otherwise, \\(P[X > x]\\). ... additional parameters passed stats::pgamma","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/pgamma_flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gamma flip — pgamma_flip","text":"distribution function","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ptgamma.html","id":null,"dir":"Reference","previous_headings":"","what":"truncated gamma — ptgamma","title":"truncated gamma — ptgamma","text":"truncated gamma","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ptgamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"truncated gamma — ptgamma","text":"","code":"ptgamma(q, shape, rate = 1, a = 0, b = Inf, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ptgamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"truncated gamma — ptgamma","text":"q numeric vector quantiles shape shape parameter gamma distribution rate rate parameter gamma distribution, default 1 distribution start b distribution end ... additional parameters passed truncdist::dtrunc","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ptgamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"truncated gamma — ptgamma","text":"distribution function","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ptgamma_flip.html","id":null,"dir":"Reference","previous_headings":"","what":"truncated gamma flip — ptgamma_flip","title":"truncated gamma flip — ptgamma_flip","text":"truncated gamma flip","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ptgamma_flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"truncated gamma flip — ptgamma_flip","text":"","code":"ptgamma_flip(q, shape, rate = 1, a = 0, b = NULL, lower.tail = TRUE, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ptgamma_flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"truncated gamma flip — ptgamma_flip","text":"q numeric vector quantiles shape shape parameter gamma distribution rate rate parameter gamma distribution, default 1 distribution start b distribution end lower.tail logical; TRUE (default), probabilities P[X <= x], otherwise, P[X > x] ... additional parameters passed truncdist::dtrunc","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/ptgamma_flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"truncated gamma flip — ptgamma_flip","text":"distribution function","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/qgamma_flip.html","id":null,"dir":"Reference","previous_headings":"","what":"gamma flip — qgamma_flip","title":"gamma flip — qgamma_flip","text":"gamma flip","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/qgamma_flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gamma flip — qgamma_flip","text":"","code":"qgamma_flip(p, shape, rate = 1, offset = 0, lower.tail = TRUE, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/qgamma_flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gamma flip — qgamma_flip","text":"p vector probabilities shape shape parameter gamma distribution rate rate parameter gamma distribution, default 1 offset offset right end distribution lower.tail logical; TRUE (default), probabilities     \\(P[X \\le x]\\), otherwise, \\(P[X > x]\\). ... additional parameters passed stats::qgamma","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/qgamma_flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gamma flip — qgamma_flip","text":"quantile","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/qtgamma.html","id":null,"dir":"Reference","previous_headings":"","what":"truncated gamma — qtgamma","title":"truncated gamma — qtgamma","text":"truncated gamma","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/qtgamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"truncated gamma — qtgamma","text":"","code":"qtgamma(p, shape, rate = 1, a = 0, b = Inf, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/qtgamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"truncated gamma — qtgamma","text":"p vector probabilities shape shape parameter gamma distribution rate rate parameter gamma distribution, default 1 distribution start b distribution end ... additional parameters passed truncdist::dtrunc","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/qtgamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"truncated gamma — qtgamma","text":"quantile function","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/qtgamma_flip.html","id":null,"dir":"Reference","previous_headings":"","what":"truncated gamma — qtgamma_flip","title":"truncated gamma — qtgamma_flip","text":"truncated gamma","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/qtgamma_flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"truncated gamma — qtgamma_flip","text":"","code":"qtgamma_flip(p, shape, rate = 1, a = 0, b = NULL, lower.tail = TRUE, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/qtgamma_flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"truncated gamma — qtgamma_flip","text":"p vector probabilities shape shape parameter gamma distribution rate rate parameter gamma distribution, default 1 distribution start b distribution end lower.tail logical; TRUE (default), probabilities P[X <= x], otherwise, P[X > x] ... additional parameters passed truncdist::dtrunc","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/qtgamma_flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"truncated gamma — qtgamma_flip","text":"quantile function","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/reassign_region_id.html","id":null,"dir":"Reference","previous_headings":"","what":"reassign_region_id for Histogram objects — reassign_region_id","title":"reassign_region_id for Histogram objects — reassign_region_id","text":"reassign_region_id Histogram objects","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/reassign_region_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reassign_region_id for Histogram objects — reassign_region_id","text":"","code":"reassign_region_id(histogram_obj, region_id)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/reassign_region_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reassign_region_id for Histogram objects — reassign_region_id","text":"histogram_obj Histogram object region_id character region_id Histogram object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/reassign_region_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reassign_region_id for Histogram objects — reassign_region_id","text":"Histogram object right region_id","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/reassign_region_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"reassign_region_id for Histogram objects — reassign_region_id","text":"","code":"x = Histogram(sample(1:5, 20, replace = TRUE), region_id = \"TEST\") y = reassign_region_id(x, \"TEST2\")"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/relative_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Kullback-Leibler divergence (Relative Entropy) — relative_entropy","title":"Kullback-Leibler divergence (Relative Entropy) — relative_entropy","text":"Kullback-Leibler divergence (Relative Entropy)","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/relative_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kullback-Leibler divergence (Relative Entropy) — relative_entropy","text":"","code":"relative_entropy(h, p, a, b)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/relative_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kullback-Leibler divergence (Relative Entropy) — relative_entropy","text":"h density distribution p density reference distribution start index subset density b end index subset density","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/relative_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kullback-Leibler divergence (Relative Entropy) — relative_entropy","text":"numeric, relative entropy distributions `h` `p` `` `b`","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/remove_max_gaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a new set of segments from a partition of points — remove_max_gaps","title":"Creates a new set of segments from a partition of points — remove_max_gaps","text":"Creates new set segments partition points","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/remove_max_gaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a new set of segments from a partition of points — remove_max_gaps","text":"","code":"remove_max_gaps(start_end_points, max_gaps, remove_short_segment = 0)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/remove_max_gaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a new set of segments from a partition of points — remove_max_gaps","text":"start_end_points data.frame start end named columns representing intervals max_gaps data.frame start end named columns representing gaps remove_short_segment minimum segment length include final segments","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/remove_max_gaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a new set of segments from a partition of points — remove_max_gaps","text":"data.frame intervals max gaps removed start start indices new intervals end end indices new intervals","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/return_x_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the segment_and_fit x coordinates of the identified points — return_x_points","title":"Returns the segment_and_fit x coordinates of the identified points — return_x_points","text":"Returns segment_and_fit x coordinates identified points","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/return_x_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the segment_and_fit x coordinates of the identified points — return_x_points","text":"","code":"return_x_points(histogram_obj)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/return_x_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the segment_and_fit x coordinates of the identified points — return_x_points","text":"histogram_obj HistogramFit object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/return_x_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the segment_and_fit x coordinates of the identified points — return_x_points","text":"numeric vector, representing segmentation points","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/return_y_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the segment_and_fit y coordinates of the identified points — return_y_points","title":"Returns the segment_and_fit y coordinates of the identified points — return_y_points","text":"Returns segment_and_fit y coordinates identified points","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/return_y_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the segment_and_fit y coordinates of the identified points — return_y_points","text":"","code":"return_y_points(histogram_obj)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/return_y_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the segment_and_fit y coordinates of the identified points — return_y_points","text":"histogram_obj HistogramFit object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/return_y_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the segment_and_fit y coordinates of the identified points — return_y_points","text":"numeric vector, representing histogram values segmentation points","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/rgamma_flip.html","id":null,"dir":"Reference","previous_headings":"","what":"gamma flip — rgamma_flip","title":"gamma flip — rgamma_flip","text":"gamma flip","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/rgamma_flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gamma flip — rgamma_flip","text":"","code":"rgamma_flip(n, shape, rate = 1, offset = 0, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/rgamma_flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gamma flip — rgamma_flip","text":"n number observations shape shape parameter gamma distribution rate rate parameter gamma distribution, default 1 offset offset right end distribution ... additional parameters passed stats::rgamma","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/rgamma_flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gamma flip — rgamma_flip","text":"random deviates","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/rtgamma.html","id":null,"dir":"Reference","previous_headings":"","what":"truncated gamma — rtgamma","title":"truncated gamma — rtgamma","text":"truncated gamma","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/rtgamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"truncated gamma — rtgamma","text":"","code":"rtgamma(n, shape, rate = 1, a = 0, b = Inf, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/rtgamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"truncated gamma — rtgamma","text":"n number observations shape shape parameter gamma distribution rate rate parameter gamma distribution, default 1 distribution start b distribution end ... additional parameters passed truncdist::dtrunc","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/rtgamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"truncated gamma — rtgamma","text":"random deviates","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/rtgamma_flip.html","id":null,"dir":"Reference","previous_headings":"","what":"truncated gamma flip — rtgamma_flip","title":"truncated gamma flip — rtgamma_flip","text":"truncated gamma flip","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/rtgamma_flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"truncated gamma flip — rtgamma_flip","text":"","code":"rtgamma_flip(n, shape, rate = 1, a = 0, b = NULL, ...)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/rtgamma_flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"truncated gamma flip — rtgamma_flip","text":"n number observations shape shape parameter gamma distribution rate rate parameter gamma distribution, default 1 distribution start b distribution end ... additional parameters passed truncdist::dtrunc","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/rtgamma_flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"truncated gamma flip — rtgamma_flip","text":"random deviates","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/scale_model_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale parameter statistics based on original fit bin width — scale_model_params","title":"Rescale parameter statistics based on original fit bin width — scale_model_params","text":"Rescale parameter statistics based original fit bin width","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/scale_model_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale parameter statistics based on original fit bin width — scale_model_params","text":"","code":"scale_model_params(stats, bin_width = 1)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/scale_model_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale parameter statistics based on original fit bin width — scale_model_params","text":"stats list model statistics. Output `extract_stats_from_models` bin_width numeric, size bin_width fit data","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/scale_model_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale parameter statistics based on original fit bin width — scale_model_params","text":"list following data representing single segment","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/segment_and_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Segmentation of histograms and distribution fitting — segment_and_fit","title":"Segmentation of histograms and distribution fitting — segment_and_fit","text":"Segmentation histograms distribution fitting","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/segment_and_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segmentation of histograms and distribution fitting — segment_and_fit","text":"","code":"segment_and_fit(   histogram_obj,   optima_threshold = 0,   optima_flat_endpoints = T,   histogram_count_threshold = 0,   eps = 1,   remove_low_entropy = T,   min_gap_size = 2,   min_segment_size = 3,   seed = NULL,   max_uniform = FALSE,   uniform_threshold = 0.75,   uniform_stepsize = 5,   uniform_max_sd = 0,   truncated_models = FALSE,   metric = c(\"jaccard\", \"intersection\", \"ks\", \"mse\", \"chisq\"),   distributions = c(\"norm\", \"unif\", \"gamma\", \"gamma_flip\"),   consensus_method = c(\"weighted_majority_vote\", \"rra\"),   metric_weights = rev(seq(1, 2, length.out = length(metric))),   distribution_prioritization = distributions )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/segment_and_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segmentation of histograms and distribution fitting — segment_and_fit","text":"histogram_obj Histogram HistogramList object optima_threshold threshold local optima, .e. point can considered local optima differs neighbour optima greater permitted threshold, default 0 optima_flat_endpoints regions flat density, whether return endpoints midpoints histogram_count_threshold hard threshold filter histogram density eps numeric (epsilon) hyperparameter finetune segmentation. See `Delon et al, 2005` remove_low_entropy logical, indicating whether filter low entropy regions min_gap_size integer, indicating minimum gap size filtered min_segment_size integer, indication minimum segment size, default 3 seed numeric seed max_uniform logical, whether find subsegment maximizing fit uniform distribution uniform_threshold numeric, indicating minimum proportion subsegment uniform_stepsize integer, indicating stepsize (relative histogram bins) take search uniform subsegment uniform_max_sd numeric, number standard deviations computed metric distribution away optimal uniform maximum length truncated_models logical, whether fit truncated distributions metric subset `mle`, `jaccard`, `intersection`, `ks`, `mse`, `chisq` indicating metrics use fit optimization. Metrics ordered descending priority. first metric vector used return `consensus` model distribution determined voting. distributions subset `norm`, `gamma`, `unif` indicating distributions fit. consensus_method one `weighted_majority_vote` `rra` method determining best method metric_weights required `method` `weighted_majority_voting`. weights metric multiplied rankings. Weights decreasing order. higher weight results higher priority metric. distribution_prioritization `method` `weighted_majority_voting`, list ranked distributions, break ties","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/segment_and_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segmentation of histograms and distribution fitting — segment_and_fit","text":"HistogramFit object representing Histogram results fit","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/segment_and_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Segmentation of histograms and distribution fitting — segment_and_fit","text":"","code":"if (FALSE) { x = Histogram(c(0, 0, 1, 2, 3, 2, 1, 2, 3, 4, 5, 3, 1, 0)) res = segment_and_fit(x) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/summarize_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Formats results of segment_and_fit — summarize_results","title":"Formats results of segment_and_fit — summarize_results","text":"Formats results segment_and_fit","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/summarize_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formats results of segment_and_fit — summarize_results","text":"","code":"summarize_results(result, model_name)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/summarize_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formats results of segment_and_fit — summarize_results","text":"result Histogram object attributes 'models' 'p' (.e. return object running segment_and_fit Histogram) model_name One metrics used fit models (e.g. Jaccard) \"consensus\" one metric used specify model params extract","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/summarize_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formats results of segment_and_fit — summarize_results","text":"data.frame subset following columns summarizing results fit region_id character string denoting region_id Histogram segment_id integer id identifying ordinal segment Histogram segmentation chr optional column denoting chromosome GenomicHistogram object start interval start segment end interval end segment strand optional column denoting strand GenomicHistogram object interval_count number intervals segment - used collapsing disjoint intervals interval_sizes width interval interval_starts start index interval histogram_start start index segment Histogram representation histogram_end end index segment Histogram representation value fitted value metric function metric metric used fit distribution dist distribution name dist_param[0-9] values distribution parameters dist_param_name[0-9] matching names distribution parameters","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/transcript_BED_to_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate GenomicHistogram objects from BED files using coordinates defined by a GTF file — transcript_BED_to_histogram","title":"Generate GenomicHistogram objects from BED files using coordinates defined by a GTF file — transcript_BED_to_histogram","text":"Generate GenomicHistogram objects BED files using coordinates defined GTF file","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/transcript_BED_to_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate GenomicHistogram objects from BED files using coordinates defined by a GTF file — transcript_BED_to_histogram","text":"","code":"transcript_BED_to_histogram(   filenames,   n_fields = c(4, 6, 12),   gtf,   histogram_bin_size = 1,   gene_or_transcript = c(\"gene\", \"transcript\"),   select_strand = c(\"*\", \"+\", \"-\"),   select_chrs = NULL,   select_ids = NULL,   allow_overlapping_segments_per_sample = F )"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/transcript_BED_to_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate GenomicHistogram objects from BED files using coordinates defined by a GTF file — transcript_BED_to_histogram","text":"filenames vector BED filenames. `name` column BED files must indicate gene transcript name n_fields Number columns BED file conform BED file standards, default 4 gtf GTF file histogram_bin_size bin size (base-pairs) bin signal histogram, default 1 gene_or_transcript `gene` `transcript` indicating whether histograms built gene coordinates transcript coordinates, default gene select_strand `*`, `+` `-`  filter regions strand, default '*' select_chrs vector chromosomes filter regions chromosome, default NULL select_ids gene transcript ids filter regions gene transcript name, must correspond GTF ids, default NULL allow_overlapping_segments_per_sample logical, FALSE, overlapping segments region file de-duplicated coverage calculation, default NULL NOTE: regions determined GTF gene/transcript IDs name column BED files. TRUE, taken separate input, default FALSE","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/transcript_BED_to_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate GenomicHistogram objects from BED files using coordinates defined by a GTF file — transcript_BED_to_histogram","text":"list GenomicHistogram objects","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/transcript_BED_to_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate GenomicHistogram objects from BED files using coordinates defined by a GTF file — transcript_BED_to_histogram","text":"","code":"if (FALSE) { datadir <- system.file(\"extdata\", \"rna_bedfiles\", package = \"HistogramZoo\") filenames <- file.path(datadir, paste0(\"Sample.\", 1:20, \".bed\")) gtf <- system.file(\"extdata\", \"genes.gtf\", package = \"HistogramZoo\")  histograms <- transcript_BED_to_histogram( filenames = filenames, n_fields = 12, gtf = gtf, gene_or_transcript = \"gene\", histogram_bin_size = 10) }"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/validate_GenomicHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Validates GenomicHistogram objects — validate_GenomicHistogram","title":"Validates GenomicHistogram objects — validate_GenomicHistogram","text":"Validates GenomicHistogram objects","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/validate_GenomicHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validates GenomicHistogram objects — validate_GenomicHistogram","text":"","code":"validate_GenomicHistogram(x)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/validate_GenomicHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validates GenomicHistogram objects — validate_GenomicHistogram","text":"x GenomicHistogram object candidate","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/validate_GenomicHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validates GenomicHistogram objects — validate_GenomicHistogram","text":"validated GenomicHistogram object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/validate_Histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Validates Histogram objects — validate_Histogram","title":"Validates Histogram objects — validate_Histogram","text":"Validates Histogram objects","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/validate_Histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validates Histogram objects — validate_Histogram","text":"","code":"validate_Histogram(x)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/validate_Histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validates Histogram objects — validate_Histogram","text":"x candidate Histogram object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/validate_Histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validates Histogram objects — validate_Histogram","text":"validated Histogram object","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/weighted.moments.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted higher order moments — weighted.sd","title":"Weighted higher order moments — weighted.sd","text":"Computes weighted sample mean, standard deviation, variance, skewness. See stats::weighted.mean.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/weighted.moments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted higher order moments — weighted.sd","text":"","code":"weighted.sd(x, ...)  weighted.var(x, ...)  weighted.skewness(x, ...)  # S3 method for Histogram weighted.mean(x)  # S3 method for Histogram weighted.var(x, sheppard = FALSE)  # S3 method for Histogram weighted.sd(x, sheppard = FALSE)  # S3 method for Histogram weighted.skewness(x, ...)  # S3 method for default weighted.sd(x, w)  # S3 method for default weighted.var(x, w, biased = FALSE)  # S3 method for default weighted.skewness(x, w, type = c(\"b\", \"g\"))"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/weighted.moments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted higher order moments — weighted.sd","text":"x values whose weighted skewness computed sheppard Sheppard's correction applied? (subtract h^2/12 variance). applied bin widths w numerical vector weight length x type 'b' (N - 1) adjustment variance 'g' method moments estimator.","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/weighted.moments.html","id":"sample-skewness","dir":"Reference","previous_headings":"","what":"Sample Skewness","title":"Weighted higher order moments — weighted.sd","text":"Sample skewness either computes 'b' 'g' skewness using notation [1]. `b` skewness follows MINITAB uses unbiased formula sd (N - 1) denominator `g` skewness follows SAS format (R moments::skewness) uses biased formula sd N denominator \"small samples normal distribution b smaller mean-squared error g... small samples non-normal distributions... g smaller mean-squared error.\"","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/weighted.moments.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weighted higher order moments — weighted.sd","text":"[1] Joanes, D. N., & Gill, C. . (1998). Comparing Measures Sample Skewness Kurtosis. Journal Royal Statistical Society. Series D (Statistician), 47(1), 183–189. http://www.jstor.org/stable/2988433","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/weighted.moments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted higher order moments — weighted.sd","text":"","code":"x <- Histogram(c(1,1,2,2,3,3,4,3,2,1)) weighted.mean(x) #> [1] 6.409091 weighted.sd(x) #> [1] 2.388646 weighted.var(x) #> [1] 5.705628 weighted.skewness(x) #> [1] -0.2778416"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/weighted_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for coverage_to_histogram that returns the weighted coverage of a disjoint bin — weighted_coverage","title":"A helper function for coverage_to_histogram that returns the weighted coverage of a disjoint bin — weighted_coverage","text":"helper function coverage_to_histogram returns weighted coverage disjoint bin","code":""},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/weighted_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for coverage_to_histogram that returns the weighted coverage of a disjoint bin — weighted_coverage","text":"","code":"weighted_coverage(split_coverage)"},{"path":"https://uclahs-cds.github.io/public-R-HistogramZoo/reference/weighted_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for coverage_to_histogram that returns the weighted coverage of a disjoint bin — weighted_coverage","text":"split_coverage GRangesList object element GRanges object representing 1 bin element GRanges object contains mcols column `cvg` representing coverage element return GRanges object element one bin `cvg` represents weighted average coverage components","code":""}]
